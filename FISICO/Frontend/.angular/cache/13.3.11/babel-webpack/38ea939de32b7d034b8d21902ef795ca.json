{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { forwardRef, EventEmitter, Directive, Input, Output, HostListener, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DomHandler } from 'primeng/dom';\nimport { NG_VALIDATORS } from '@angular/forms';\nconst KEYFILTER_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => KeyFilter),\n  multi: true\n};\nconst DEFAULT_MASKS = {\n  pint: /[\\d]/,\n  'int': /[\\d\\-]/,\n  pnum: /[\\d\\.]/,\n  money: /[\\d\\.\\s,]/,\n  num: /[\\d\\-\\.]/,\n  hex: /[0-9a-f]/i,\n  email: /[a-z0-9_\\.\\-@]/i,\n  alpha: /[a-z_]/i,\n  alphanum: /[a-z0-9_]/i\n};\nconst KEYS = {\n  TAB: 9,\n  RETURN: 13,\n  ESC: 27,\n  BACKSPACE: 8,\n  DELETE: 46\n};\nconst SAFARI_KEYS = {\n  63234: 37,\n  63235: 39,\n  63232: 38,\n  63233: 40,\n  63276: 33,\n  63277: 34,\n  63272: 46,\n  63273: 36,\n  63275: 35 // end\n\n};\n\nclass KeyFilter {\n  constructor(el) {\n    this.el = el;\n    this.ngModelChange = new EventEmitter();\n    this.isAndroid = DomHandler.isAndroid();\n  }\n\n  get pattern() {\n    return this._pattern;\n  }\n\n  set pattern(_pattern) {\n    this._pattern = _pattern;\n    this.regex = DEFAULT_MASKS[this._pattern] || this._pattern;\n  }\n\n  isNavKeyPress(e) {\n    let k = e.keyCode;\n    k = DomHandler.getBrowser().safari ? SAFARI_KEYS[k] || k : k;\n    return k >= 33 && k <= 40 || k == KEYS.RETURN || k == KEYS.TAB || k == KEYS.ESC;\n  }\n\n  isSpecialKey(e) {\n    let k = e.keyCode || e.charCode;\n    return k == 9 || k == 13 || k == 27 || k == 16 || k == 17 || k >= 18 && k <= 20 || DomHandler.getBrowser().opera && !e.shiftKey && (k == 8 || k >= 33 && k <= 35 || k >= 36 && k <= 39 || k >= 44 && k <= 45);\n  }\n\n  getKey(e) {\n    let k = e.keyCode || e.charCode;\n    return DomHandler.getBrowser().safari ? SAFARI_KEYS[k] || k : k;\n  }\n\n  getCharCode(e) {\n    return e.charCode || e.keyCode || e.which;\n  }\n\n  findDelta(value, prevValue) {\n    let delta = '';\n\n    for (let i = 0; i < value.length; i++) {\n      let str = value.substr(0, i) + value.substr(i + value.length - prevValue.length);\n      if (str === prevValue) delta = value.substr(i, value.length - prevValue.length);\n    }\n\n    return delta;\n  }\n\n  isValidChar(c) {\n    return this.regex.test(c);\n  }\n\n  isValidString(str) {\n    for (let i = 0; i < str.length; i++) {\n      if (!this.isValidChar(str.substr(i, 1))) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  onInput(e) {\n    if (this.isAndroid && !this.pValidateOnly) {\n      let val = this.el.nativeElement.value;\n      let lastVal = this.lastValue || '';\n      let inserted = this.findDelta(val, lastVal);\n      let removed = this.findDelta(lastVal, val);\n      let pasted = inserted.length > 1 || !inserted && !removed;\n\n      if (pasted) {\n        if (!this.isValidString(val)) {\n          this.el.nativeElement.value = lastVal;\n          this.ngModelChange.emit(lastVal);\n        }\n      } else if (!removed) {\n        if (!this.isValidChar(inserted)) {\n          this.el.nativeElement.value = lastVal;\n          this.ngModelChange.emit(lastVal);\n        }\n      }\n\n      val = this.el.nativeElement.value;\n\n      if (this.isValidString(val)) {\n        this.lastValue = val;\n      }\n    }\n  }\n\n  onKeyPress(e) {\n    if (this.isAndroid || this.pValidateOnly) {\n      return;\n    }\n\n    let browser = DomHandler.getBrowser();\n    let k = this.getKey(e);\n\n    if (browser.mozilla && (e.ctrlKey || e.altKey)) {\n      return;\n    } else if (k == 17 || k == 18) {\n      return;\n    }\n\n    let c = this.getCharCode(e);\n    let cc = String.fromCharCode(c);\n    let ok = true;\n\n    if (!browser.mozilla && (this.isSpecialKey(e) || !cc)) {\n      return;\n    }\n\n    ok = this.regex.test(cc);\n\n    if (!ok) {\n      e.preventDefault();\n    }\n  }\n\n  onPaste(e) {\n    const clipboardData = e.clipboardData || window.clipboardData.getData('text');\n\n    if (clipboardData) {\n      const pastedText = clipboardData.getData('text');\n\n      for (let char of pastedText.toString()) {\n        if (!this.regex.test(char)) {\n          e.preventDefault();\n          return;\n        }\n      }\n    }\n  }\n\n  validate(c) {\n    if (this.pValidateOnly) {\n      let value = this.el.nativeElement.value;\n\n      if (value && !this.regex.test(value)) {\n        return {\n          validatePattern: false\n        };\n      }\n    }\n  }\n\n}\n\nKeyFilter.ɵfac = function KeyFilter_Factory(t) {\n  return new (t || KeyFilter)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nKeyFilter.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: KeyFilter,\n  selectors: [[\"\", \"pKeyFilter\", \"\"]],\n  hostAttrs: [1, \"p-element\"],\n  hostBindings: function KeyFilter_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"input\", function KeyFilter_input_HostBindingHandler($event) {\n        return ctx.onInput($event);\n      })(\"keypress\", function KeyFilter_keypress_HostBindingHandler($event) {\n        return ctx.onKeyPress($event);\n      })(\"paste\", function KeyFilter_paste_HostBindingHandler($event) {\n        return ctx.onPaste($event);\n      });\n    }\n  },\n  inputs: {\n    pValidateOnly: \"pValidateOnly\",\n    pattern: [\"pKeyFilter\", \"pattern\"]\n  },\n  outputs: {\n    ngModelChange: \"ngModelChange\"\n  },\n  features: [i0.ɵɵProvidersFeature([KEYFILTER_VALIDATOR])]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(KeyFilter, [{\n    type: Directive,\n    args: [{\n      selector: '[pKeyFilter]',\n      providers: [KEYFILTER_VALIDATOR],\n      host: {\n        'class': 'p-element'\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    pValidateOnly: [{\n      type: Input\n    }],\n    ngModelChange: [{\n      type: Output\n    }],\n    pattern: [{\n      type: Input,\n      args: ['pKeyFilter']\n    }],\n    onInput: [{\n      type: HostListener,\n      args: ['input', ['$event']]\n    }],\n    onKeyPress: [{\n      type: HostListener,\n      args: ['keypress', ['$event']]\n    }],\n    onPaste: [{\n      type: HostListener,\n      args: ['paste', ['$event']]\n    }]\n  });\n})();\n\nclass KeyFilterModule {}\n\nKeyFilterModule.ɵfac = function KeyFilterModule_Factory(t) {\n  return new (t || KeyFilterModule)();\n};\n\nKeyFilterModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: KeyFilterModule\n});\nKeyFilterModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(KeyFilterModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      exports: [KeyFilter],\n      declarations: [KeyFilter]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { KEYFILTER_VALIDATOR, KeyFilter, KeyFilterModule };","map":{"version":3,"sources":["C:/Users/esthe/Documents/GitHub/Peakfit/FISICO/Frontend/node_modules/primeng/fesm2015/primeng-keyfilter.mjs"],"names":["i0","forwardRef","EventEmitter","Directive","Input","Output","HostListener","NgModule","CommonModule","DomHandler","NG_VALIDATORS","KEYFILTER_VALIDATOR","provide","useExisting","KeyFilter","multi","DEFAULT_MASKS","pint","pnum","money","num","hex","email","alpha","alphanum","KEYS","TAB","RETURN","ESC","BACKSPACE","DELETE","SAFARI_KEYS","constructor","el","ngModelChange","isAndroid","pattern","_pattern","regex","isNavKeyPress","e","k","keyCode","getBrowser","safari","isSpecialKey","charCode","opera","shiftKey","getKey","getCharCode","which","findDelta","value","prevValue","delta","i","length","str","substr","isValidChar","c","test","isValidString","onInput","pValidateOnly","val","nativeElement","lastVal","lastValue","inserted","removed","pasted","emit","onKeyPress","browser","mozilla","ctrlKey","altKey","cc","String","fromCharCode","ok","preventDefault","onPaste","clipboardData","window","getData","pastedText","char","toString","validate","validatePattern","ɵfac","ElementRef","ɵdir","type","args","selector","providers","host","KeyFilterModule","ɵmod","ɵinj","imports","exports","declarations"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { forwardRef, EventEmitter, Directive, Input, Output, HostListener, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DomHandler } from 'primeng/dom';\nimport { NG_VALIDATORS } from '@angular/forms';\n\nconst KEYFILTER_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => KeyFilter),\n    multi: true\n};\nconst DEFAULT_MASKS = {\n    pint: /[\\d]/,\n    'int': /[\\d\\-]/,\n    pnum: /[\\d\\.]/,\n    money: /[\\d\\.\\s,]/,\n    num: /[\\d\\-\\.]/,\n    hex: /[0-9a-f]/i,\n    email: /[a-z0-9_\\.\\-@]/i,\n    alpha: /[a-z_]/i,\n    alphanum: /[a-z0-9_]/i\n};\nconst KEYS = {\n    TAB: 9,\n    RETURN: 13,\n    ESC: 27,\n    BACKSPACE: 8,\n    DELETE: 46\n};\nconst SAFARI_KEYS = {\n    63234: 37,\n    63235: 39,\n    63232: 38,\n    63233: 40,\n    63276: 33,\n    63277: 34,\n    63272: 46,\n    63273: 36,\n    63275: 35 // end\n};\nclass KeyFilter {\n    constructor(el) {\n        this.el = el;\n        this.ngModelChange = new EventEmitter();\n        this.isAndroid = DomHandler.isAndroid();\n    }\n    get pattern() {\n        return this._pattern;\n    }\n    set pattern(_pattern) {\n        this._pattern = _pattern;\n        this.regex = DEFAULT_MASKS[this._pattern] || this._pattern;\n    }\n    isNavKeyPress(e) {\n        let k = e.keyCode;\n        k = DomHandler.getBrowser().safari ? (SAFARI_KEYS[k] || k) : k;\n        return (k >= 33 && k <= 40) || k == KEYS.RETURN || k == KEYS.TAB || k == KEYS.ESC;\n    }\n    ;\n    isSpecialKey(e) {\n        let k = e.keyCode || e.charCode;\n        return k == 9 || k == 13 || k == 27 || k == 16 || k == 17 || (k >= 18 && k <= 20) ||\n            (DomHandler.getBrowser().opera && !e.shiftKey && (k == 8 || (k >= 33 && k <= 35) || (k >= 36 && k <= 39) || (k >= 44 && k <= 45)));\n    }\n    getKey(e) {\n        let k = e.keyCode || e.charCode;\n        return DomHandler.getBrowser().safari ? (SAFARI_KEYS[k] || k) : k;\n    }\n    getCharCode(e) {\n        return e.charCode || e.keyCode || e.which;\n    }\n    findDelta(value, prevValue) {\n        let delta = '';\n        for (let i = 0; i < value.length; i++) {\n            let str = value.substr(0, i) + value.substr(i + value.length - prevValue.length);\n            if (str === prevValue)\n                delta = value.substr(i, value.length - prevValue.length);\n        }\n        return delta;\n    }\n    isValidChar(c) {\n        return this.regex.test(c);\n    }\n    isValidString(str) {\n        for (let i = 0; i < str.length; i++) {\n            if (!this.isValidChar(str.substr(i, 1))) {\n                return false;\n            }\n        }\n        return true;\n    }\n    onInput(e) {\n        if (this.isAndroid && !this.pValidateOnly) {\n            let val = this.el.nativeElement.value;\n            let lastVal = this.lastValue || '';\n            let inserted = this.findDelta(val, lastVal);\n            let removed = this.findDelta(lastVal, val);\n            let pasted = inserted.length > 1 || (!inserted && !removed);\n            if (pasted) {\n                if (!this.isValidString(val)) {\n                    this.el.nativeElement.value = lastVal;\n                    this.ngModelChange.emit(lastVal);\n                }\n            }\n            else if (!removed) {\n                if (!this.isValidChar(inserted)) {\n                    this.el.nativeElement.value = lastVal;\n                    this.ngModelChange.emit(lastVal);\n                }\n            }\n            val = this.el.nativeElement.value;\n            if (this.isValidString(val)) {\n                this.lastValue = val;\n            }\n        }\n    }\n    onKeyPress(e) {\n        if (this.isAndroid || this.pValidateOnly) {\n            return;\n        }\n        let browser = DomHandler.getBrowser();\n        let k = this.getKey(e);\n        if (browser.mozilla && (e.ctrlKey || e.altKey)) {\n            return;\n        }\n        else if (k == 17 || k == 18) {\n            return;\n        }\n        let c = this.getCharCode(e);\n        let cc = String.fromCharCode(c);\n        let ok = true;\n        if (!browser.mozilla && (this.isSpecialKey(e) || !cc)) {\n            return;\n        }\n        ok = this.regex.test(cc);\n        if (!ok) {\n            e.preventDefault();\n        }\n    }\n    onPaste(e) {\n        const clipboardData = e.clipboardData || window.clipboardData.getData('text');\n        if (clipboardData) {\n            const pastedText = clipboardData.getData('text');\n            for (let char of pastedText.toString()) {\n                if (!this.regex.test(char)) {\n                    e.preventDefault();\n                    return;\n                }\n            }\n        }\n    }\n    validate(c) {\n        if (this.pValidateOnly) {\n            let value = this.el.nativeElement.value;\n            if (value && !this.regex.test(value)) {\n                return {\n                    validatePattern: false\n                };\n            }\n        }\n    }\n}\nKeyFilter.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: KeyFilter, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nKeyFilter.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.2.7\", type: KeyFilter, selector: \"[pKeyFilter]\", inputs: { pValidateOnly: \"pValidateOnly\", pattern: [\"pKeyFilter\", \"pattern\"] }, outputs: { ngModelChange: \"ngModelChange\" }, host: { listeners: { \"input\": \"onInput($event)\", \"keypress\": \"onKeyPress($event)\", \"paste\": \"onPaste($event)\" }, classAttribute: \"p-element\" }, providers: [KEYFILTER_VALIDATOR], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: KeyFilter, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[pKeyFilter]',\n                    providers: [KEYFILTER_VALIDATOR],\n                    host: {\n                        'class': 'p-element'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { pValidateOnly: [{\n                type: Input\n            }], ngModelChange: [{\n                type: Output\n            }], pattern: [{\n                type: Input,\n                args: ['pKeyFilter']\n            }], onInput: [{\n                type: HostListener,\n                args: ['input', ['$event']]\n            }], onKeyPress: [{\n                type: HostListener,\n                args: ['keypress', ['$event']]\n            }], onPaste: [{\n                type: HostListener,\n                args: ['paste', ['$event']]\n            }] } });\nclass KeyFilterModule {\n}\nKeyFilterModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: KeyFilterModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nKeyFilterModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: KeyFilterModule, declarations: [KeyFilter], imports: [CommonModule], exports: [KeyFilter] });\nKeyFilterModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: KeyFilterModule, imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: KeyFilterModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    exports: [KeyFilter],\n                    declarations: [KeyFilter]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { KEYFILTER_VALIDATOR, KeyFilter, KeyFilterModule };\n"]},"metadata":{},"sourceType":"module"}