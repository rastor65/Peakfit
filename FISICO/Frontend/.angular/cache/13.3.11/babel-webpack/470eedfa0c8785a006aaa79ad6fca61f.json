{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, NgModule } from '@angular/core';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i1 from 'primeng/api';\nimport { TranslationKeys } from 'primeng/api';\nimport * as i3 from 'primeng/button';\nimport { ButtonModule } from 'primeng/button';\nimport { ZIndexUtils } from 'primeng/utils';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { DomHandler, ConnectedOverlayScrollHandler } from 'primeng/dom';\n\nfunction ConfirmPopup_div_0_i_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 8);\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassMap(ctx_r2.confirmation.icon);\n    i0.ɵɵproperty(\"ngClass\", \"p-confirm-popup-icon\");\n  }\n}\n\nfunction ConfirmPopup_div_0_button_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function ConfirmPopup_div_0_button_7_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext(2);\n      return ctx_r5.reject();\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassMap(ctx_r3.confirmation.rejectButtonStyleClass || \"p-button-text\");\n    i0.ɵɵproperty(\"icon\", ctx_r3.confirmation.rejectIcon)(\"label\", ctx_r3.rejectButtonLabel)(\"ngClass\", \"p-confirm-popup-reject p-button-sm\");\n    i0.ɵɵattribute(\"aria-label\", ctx_r3.rejectButtonLabel);\n  }\n}\n\nfunction ConfirmPopup_div_0_button_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function ConfirmPopup_div_0_button_8_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext(2);\n      return ctx_r7.accept();\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassMap(ctx_r4.confirmation.acceptButtonStyleClass);\n    i0.ɵɵproperty(\"icon\", ctx_r4.confirmation.acceptIcon)(\"label\", ctx_r4.acceptButtonLabel)(\"ngClass\", \"p-confirm-popup-accept p-button-sm\");\n    i0.ɵɵattribute(\"aria-label\", ctx_r4.acceptButtonLabel);\n  }\n}\n\nconst _c0 = function (a0, a1) {\n  return {\n    showTransitionParams: a0,\n    hideTransitionParams: a1\n  };\n};\n\nconst _c1 = function (a1) {\n  return {\n    value: \"open\",\n    params: a1\n  };\n};\n\nfunction ConfirmPopup_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵlistener(\"click\", function ConfirmPopup_div_0_Template_div_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return ctx_r9.onOverlayClick($event);\n    })(\"@animation.start\", function ConfirmPopup_div_0_Template_div_animation_animation_start_0_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return ctx_r11.onAnimationStart($event);\n    })(\"@animation.done\", function ConfirmPopup_div_0_Template_div_animation_animation_done_0_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return ctx_r12.onAnimationEnd($event);\n    });\n    i0.ɵɵelementStart(1, \"div\", 2, 3);\n    i0.ɵɵtemplate(3, ConfirmPopup_div_0_i_3_Template, 1, 3, \"i\", 4);\n    i0.ɵɵelementStart(4, \"span\", 5);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 6);\n    i0.ɵɵtemplate(7, ConfirmPopup_div_0_button_7_Template, 1, 6, \"button\", 7);\n    i0.ɵɵtemplate(8, ConfirmPopup_div_0_button_8_Template, 1, 6, \"button\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r0.styleClass);\n    i0.ɵɵproperty(\"ngClass\", \"p-confirm-popup p-component\")(\"ngStyle\", ctx_r0.style)(\"@animation\", i0.ɵɵpureFunction1(12, _c1, i0.ɵɵpureFunction2(9, _c0, ctx_r0.showTransitionOptions, ctx_r0.hideTransitionOptions)));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.confirmation.icon);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.confirmation.message);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.confirmation.rejectVisible !== false);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.confirmation.acceptVisible !== false);\n  }\n}\n\nclass ConfirmPopup {\n  constructor(el, confirmationService, renderer, cd, config, overlayService) {\n    this.el = el;\n    this.confirmationService = confirmationService;\n    this.renderer = renderer;\n    this.cd = cd;\n    this.config = config;\n    this.overlayService = overlayService;\n    this.defaultFocus = \"accept\";\n    this.showTransitionOptions = '.12s cubic-bezier(0, 0, 0.2, 1)';\n    this.hideTransitionOptions = '.1s linear';\n    this.autoZIndex = true;\n    this.baseZIndex = 0;\n    this.subscription = this.confirmationService.requireConfirmation$.subscribe(confirmation => {\n      if (!confirmation) {\n        this.hide();\n        return;\n      }\n\n      if (confirmation.key === this.key) {\n        this.confirmation = confirmation;\n\n        if (this.confirmation.accept) {\n          this.confirmation.acceptEvent = new EventEmitter();\n          this.confirmation.acceptEvent.subscribe(this.confirmation.accept);\n        }\n\n        if (this.confirmation.reject) {\n          this.confirmation.rejectEvent = new EventEmitter();\n          this.confirmation.rejectEvent.subscribe(this.confirmation.reject);\n        }\n\n        this.visible = true;\n      }\n    });\n  }\n\n  get visible() {\n    return this._visible;\n  }\n\n  set visible(value) {\n    this._visible = value;\n    this.cd.markForCheck();\n  }\n\n  onAnimationStart(event) {\n    if (event.toState === 'open') {\n      this.container = event.element;\n      document.body.appendChild(this.container);\n      this.align();\n      this.bindListeners();\n      const element = this.getElementToFocus();\n\n      if (element) {\n        element.focus();\n      }\n    }\n  }\n\n  onAnimationEnd(event) {\n    switch (event.toState) {\n      case 'void':\n        this.onContainerDestroy();\n        break;\n    }\n  }\n\n  getElementToFocus() {\n    switch (this.defaultFocus) {\n      case 'accept':\n        return DomHandler.findSingle(this.container, '.p-confirm-popup-accept');\n\n      case 'reject':\n        return DomHandler.findSingle(this.container, '.p-confirm-popup-reject');\n\n      case 'none':\n        return null;\n    }\n  }\n\n  align() {\n    if (this.autoZIndex) {\n      ZIndexUtils.set('overlay', this.container, this.config.zIndex.overlay);\n    }\n\n    DomHandler.absolutePosition(this.container, this.confirmation.target);\n    const containerOffset = DomHandler.getOffset(this.container);\n    const targetOffset = DomHandler.getOffset(this.confirmation.target);\n    let arrowLeft = 0;\n\n    if (containerOffset.left < targetOffset.left) {\n      arrowLeft = targetOffset.left - containerOffset.left;\n    }\n\n    this.container.style.setProperty('--overlayArrowLeft', `${arrowLeft}px`);\n\n    if (containerOffset.top < targetOffset.top) {\n      DomHandler.addClass(this.container, 'p-confirm-popup-flipped');\n    }\n  }\n\n  hide() {\n    this.visible = false;\n  }\n\n  accept() {\n    if (this.confirmation.acceptEvent) {\n      this.confirmation.acceptEvent.emit();\n    }\n\n    this.hide();\n  }\n\n  reject() {\n    if (this.confirmation.rejectEvent) {\n      this.confirmation.rejectEvent.emit();\n    }\n\n    this.hide();\n  }\n\n  onOverlayClick(event) {\n    this.overlayService.add({\n      originalEvent: event,\n      target: this.el.nativeElement\n    });\n  }\n\n  bindListeners() {\n    this.bindDocumentClickListener();\n    this.bindDocumentResizeListener();\n    this.bindScrollListener();\n  }\n\n  unbindListeners() {\n    this.unbindDocumentClickListener();\n    this.unbindDocumentResizeListener();\n    this.unbindScrollListener();\n  }\n\n  bindDocumentClickListener() {\n    if (!this.documentClickListener) {\n      let documentEvent = DomHandler.isIOS() ? 'touchstart' : 'click';\n      const documentTarget = this.el ? this.el.nativeElement.ownerDocument : document;\n      this.documentClickListener = this.renderer.listen(documentTarget, documentEvent, event => {\n        let targetElement = this.confirmation.target;\n\n        if (this.container !== event.target && !this.container.contains(event.target) && targetElement !== event.target && !targetElement.contains(event.target)) {\n          this.hide();\n        }\n      });\n    }\n  }\n\n  unbindDocumentClickListener() {\n    if (this.documentClickListener) {\n      this.documentClickListener();\n      this.documentClickListener = null;\n    }\n  }\n\n  onWindowResize() {\n    this.hide();\n  }\n\n  bindDocumentResizeListener() {\n    this.documentResizeListener = this.onWindowResize.bind(this);\n    window.addEventListener('resize', this.documentResizeListener);\n  }\n\n  unbindDocumentResizeListener() {\n    if (this.documentResizeListener) {\n      window.removeEventListener('resize', this.documentResizeListener);\n      this.documentResizeListener = null;\n    }\n  }\n\n  bindScrollListener() {\n    if (!this.scrollHandler) {\n      this.scrollHandler = new ConnectedOverlayScrollHandler(this.confirmation.target, () => {\n        if (this.visible) {\n          this.hide();\n        }\n      });\n    }\n\n    this.scrollHandler.bindScrollListener();\n  }\n\n  unbindScrollListener() {\n    if (this.scrollHandler) {\n      this.scrollHandler.unbindScrollListener();\n    }\n  }\n\n  unsubscribeConfirmationSubscriptions() {\n    if (this.confirmation) {\n      if (this.confirmation.acceptEvent) {\n        this.confirmation.acceptEvent.unsubscribe();\n      }\n\n      if (this.confirmation.rejectEvent) {\n        this.confirmation.rejectEvent.unsubscribe();\n      }\n    }\n  }\n\n  onContainerDestroy() {\n    this.unbindListeners();\n    this.unsubscribeConfirmationSubscriptions();\n\n    if (this.autoZIndex) {\n      ZIndexUtils.clear(this.container);\n    }\n\n    this.confirmation = null;\n    this.container = null;\n  }\n\n  restoreAppend() {\n    if (this.container) {\n      document.body.removeChild(this.container);\n    }\n\n    this.onContainerDestroy();\n  }\n\n  get acceptButtonLabel() {\n    return this.confirmation.acceptLabel || this.config.getTranslation(TranslationKeys.ACCEPT);\n  }\n\n  get rejectButtonLabel() {\n    return this.confirmation.rejectLabel || this.config.getTranslation(TranslationKeys.REJECT);\n  }\n\n  ngOnDestroy() {\n    this.restoreAppend();\n\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n\n}\n\nConfirmPopup.ɵfac = function ConfirmPopup_Factory(t) {\n  return new (t || ConfirmPopup)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.ConfirmationService), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.PrimeNGConfig), i0.ɵɵdirectiveInject(i1.OverlayService));\n};\n\nConfirmPopup.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ConfirmPopup,\n  selectors: [[\"p-confirmPopup\"]],\n  hostAttrs: [1, \"p-element\"],\n  inputs: {\n    key: \"key\",\n    defaultFocus: \"defaultFocus\",\n    showTransitionOptions: \"showTransitionOptions\",\n    hideTransitionOptions: \"hideTransitionOptions\",\n    autoZIndex: \"autoZIndex\",\n    baseZIndex: \"baseZIndex\",\n    style: \"style\",\n    styleClass: \"styleClass\",\n    visible: \"visible\"\n  },\n  decls: 1,\n  vars: 1,\n  consts: [[3, \"ngClass\", \"ngStyle\", \"class\", \"click\", 4, \"ngIf\"], [3, \"ngClass\", \"ngStyle\", \"click\"], [1, \"p-confirm-popup-content\"], [\"content\", \"\"], [3, \"ngClass\", \"class\", 4, \"ngIf\"], [1, \"p-confirm-popup-message\"], [1, \"p-confirm-popup-footer\"], [\"type\", \"button\", \"pButton\", \"\", 3, \"icon\", \"label\", \"ngClass\", \"class\", \"click\", 4, \"ngIf\"], [3, \"ngClass\"], [\"type\", \"button\", \"pButton\", \"\", 3, \"icon\", \"label\", \"ngClass\", \"click\"]],\n  template: function ConfirmPopup_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, ConfirmPopup_div_0_Template, 9, 14, \"div\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.visible);\n    }\n  },\n  directives: [i2.NgIf, i2.NgClass, i2.NgStyle, i3.ButtonDirective],\n  styles: [\".p-confirm-popup{position:absolute;margin-top:10px;top:0;left:0}.p-confirm-popup-flipped{margin-top:0;margin-bottom:10px}.p-confirm-popup:after,.p-confirm-popup:before{bottom:100%;left:calc(var(--overlayArrowLeft, 0) + 1.25rem);content:\\\" \\\";height:0;width:0;position:absolute;pointer-events:none}.p-confirm-popup:after{border-width:8px;margin-left:-8px}.p-confirm-popup:before{border-width:10px;margin-left:-10px}.p-confirm-popup-flipped:after,.p-confirm-popup-flipped:before{bottom:auto;top:100%}.p-confirm-popup.p-confirm-popup-flipped:after{border-bottom-color:transparent}.p-confirm-popup.p-confirm-popup-flipped:before{border-bottom-color:transparent}.p-confirm-popup .p-confirm-popup-content{display:flex;align-items:center}\\n\"],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('animation', [state('void', style({\n      transform: 'scaleY(0.8)',\n      opacity: 0\n    })), state('open', style({\n      transform: 'translateY(0)',\n      opacity: 1\n    })), transition('void => open', animate('{{showTransitionParams}}')), transition('open => void', animate('{{hideTransitionParams}}'))])]\n  },\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ConfirmPopup, [{\n    type: Component,\n    args: [{\n      selector: 'p-confirmPopup',\n      template: `\n        <div *ngIf=\"visible\" [ngClass]=\"'p-confirm-popup p-component'\" [ngStyle]=\"style\" [class]=\"styleClass\" (click)=\"onOverlayClick($event)\"\n            [@animation]=\"{value: 'open', params: {showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions}}\"\n            (@animation.start)=\"onAnimationStart($event)\" (@animation.done)=\"onAnimationEnd($event)\">\n            <div #content class=\"p-confirm-popup-content\">\n                <i [ngClass]=\"'p-confirm-popup-icon'\" [class]=\"confirmation.icon\" *ngIf=\"confirmation.icon\"></i>\n                <span class=\"p-confirm-popup-message\">{{confirmation.message}}</span>\n            </div>\n            <div class=\"p-confirm-popup-footer\">\n                <button type=\"button\" pButton [icon]=\"confirmation.rejectIcon\" [label]=\"rejectButtonLabel\" (click)=\"reject()\" [ngClass]=\"'p-confirm-popup-reject p-button-sm'\"\n                    [class]=\"confirmation.rejectButtonStyleClass || 'p-button-text'\" *ngIf=\"confirmation.rejectVisible !== false\" [attr.aria-label]=\"rejectButtonLabel\"></button>\n                <button type=\"button\" pButton [icon]=\"confirmation.acceptIcon\" [label]=\"acceptButtonLabel\" (click)=\"accept()\" [ngClass]=\"'p-confirm-popup-accept p-button-sm'\"\n                    [class]=\"confirmation.acceptButtonStyleClass\" *ngIf=\"confirmation.acceptVisible !== false\" [attr.aria-label]=\"acceptButtonLabel\"></button>\n            </div>\n        </div>\n    `,\n      animations: [trigger('animation', [state('void', style({\n        transform: 'scaleY(0.8)',\n        opacity: 0\n      })), state('open', style({\n        transform: 'translateY(0)',\n        opacity: 1\n      })), transition('void => open', animate('{{showTransitionParams}}')), transition('open => void', animate('{{hideTransitionParams}}'))])],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        'class': 'p-element'\n      },\n      styles: [\".p-confirm-popup{position:absolute;margin-top:10px;top:0;left:0}.p-confirm-popup-flipped{margin-top:0;margin-bottom:10px}.p-confirm-popup:after,.p-confirm-popup:before{bottom:100%;left:calc(var(--overlayArrowLeft, 0) + 1.25rem);content:\\\" \\\";height:0;width:0;position:absolute;pointer-events:none}.p-confirm-popup:after{border-width:8px;margin-left:-8px}.p-confirm-popup:before{border-width:10px;margin-left:-10px}.p-confirm-popup-flipped:after,.p-confirm-popup-flipped:before{bottom:auto;top:100%}.p-confirm-popup.p-confirm-popup-flipped:after{border-bottom-color:transparent}.p-confirm-popup.p-confirm-popup-flipped:before{border-bottom-color:transparent}.p-confirm-popup .p-confirm-popup-content{display:flex;align-items:center}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i1.ConfirmationService\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i1.PrimeNGConfig\n    }, {\n      type: i1.OverlayService\n    }];\n  }, {\n    key: [{\n      type: Input\n    }],\n    defaultFocus: [{\n      type: Input\n    }],\n    showTransitionOptions: [{\n      type: Input\n    }],\n    hideTransitionOptions: [{\n      type: Input\n    }],\n    autoZIndex: [{\n      type: Input\n    }],\n    baseZIndex: [{\n      type: Input\n    }],\n    style: [{\n      type: Input\n    }],\n    styleClass: [{\n      type: Input\n    }],\n    visible: [{\n      type: Input\n    }]\n  });\n})();\n\nclass ConfirmPopupModule {}\n\nConfirmPopupModule.ɵfac = function ConfirmPopupModule_Factory(t) {\n  return new (t || ConfirmPopupModule)();\n};\n\nConfirmPopupModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: ConfirmPopupModule\n});\nConfirmPopupModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, ButtonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ConfirmPopupModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, ButtonModule],\n      exports: [ConfirmPopup],\n      declarations: [ConfirmPopup]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { ConfirmPopup, ConfirmPopupModule };","map":{"version":3,"sources":["C:/Users/esthe/Documents/GitHub/Peakfit/FISICO/Frontend/node_modules/primeng/fesm2015/primeng-confirmpopup.mjs"],"names":["i0","EventEmitter","Component","ChangeDetectionStrategy","ViewEncapsulation","Input","NgModule","i2","CommonModule","i1","TranslationKeys","i3","ButtonModule","ZIndexUtils","trigger","state","style","transition","animate","DomHandler","ConnectedOverlayScrollHandler","ConfirmPopup","constructor","el","confirmationService","renderer","cd","config","overlayService","defaultFocus","showTransitionOptions","hideTransitionOptions","autoZIndex","baseZIndex","subscription","requireConfirmation$","subscribe","confirmation","hide","key","accept","acceptEvent","reject","rejectEvent","visible","_visible","value","markForCheck","onAnimationStart","event","toState","container","element","document","body","appendChild","align","bindListeners","getElementToFocus","focus","onAnimationEnd","onContainerDestroy","findSingle","set","zIndex","overlay","absolutePosition","target","containerOffset","getOffset","targetOffset","arrowLeft","left","setProperty","top","addClass","emit","onOverlayClick","add","originalEvent","nativeElement","bindDocumentClickListener","bindDocumentResizeListener","bindScrollListener","unbindListeners","unbindDocumentClickListener","unbindDocumentResizeListener","unbindScrollListener","documentClickListener","documentEvent","isIOS","documentTarget","ownerDocument","listen","targetElement","contains","onWindowResize","documentResizeListener","bind","window","addEventListener","removeEventListener","scrollHandler","unsubscribeConfirmationSubscriptions","unsubscribe","clear","restoreAppend","removeChild","acceptButtonLabel","acceptLabel","getTranslation","ACCEPT","rejectButtonLabel","rejectLabel","REJECT","ngOnDestroy","ɵfac","ElementRef","ConfirmationService","Renderer2","ChangeDetectorRef","PrimeNGConfig","OverlayService","ɵcmp","NgIf","NgClass","NgStyle","ButtonDirective","transform","opacity","type","args","selector","template","animations","changeDetection","OnPush","encapsulation","None","host","styles","styleClass","ConfirmPopupModule","ɵmod","ɵinj","imports","exports","declarations"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, NgModule } from '@angular/core';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i1 from 'primeng/api';\nimport { TranslationKeys } from 'primeng/api';\nimport * as i3 from 'primeng/button';\nimport { ButtonModule } from 'primeng/button';\nimport { ZIndexUtils } from 'primeng/utils';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { DomHandler, ConnectedOverlayScrollHandler } from 'primeng/dom';\n\nclass ConfirmPopup {\n    constructor(el, confirmationService, renderer, cd, config, overlayService) {\n        this.el = el;\n        this.confirmationService = confirmationService;\n        this.renderer = renderer;\n        this.cd = cd;\n        this.config = config;\n        this.overlayService = overlayService;\n        this.defaultFocus = \"accept\";\n        this.showTransitionOptions = '.12s cubic-bezier(0, 0, 0.2, 1)';\n        this.hideTransitionOptions = '.1s linear';\n        this.autoZIndex = true;\n        this.baseZIndex = 0;\n        this.subscription = this.confirmationService.requireConfirmation$.subscribe(confirmation => {\n            if (!confirmation) {\n                this.hide();\n                return;\n            }\n            if (confirmation.key === this.key) {\n                this.confirmation = confirmation;\n                if (this.confirmation.accept) {\n                    this.confirmation.acceptEvent = new EventEmitter();\n                    this.confirmation.acceptEvent.subscribe(this.confirmation.accept);\n                }\n                if (this.confirmation.reject) {\n                    this.confirmation.rejectEvent = new EventEmitter();\n                    this.confirmation.rejectEvent.subscribe(this.confirmation.reject);\n                }\n                this.visible = true;\n            }\n        });\n    }\n    get visible() {\n        return this._visible;\n    }\n    set visible(value) {\n        this._visible = value;\n        this.cd.markForCheck();\n    }\n    onAnimationStart(event) {\n        if (event.toState === 'open') {\n            this.container = event.element;\n            document.body.appendChild(this.container);\n            this.align();\n            this.bindListeners();\n            const element = this.getElementToFocus();\n            if (element) {\n                element.focus();\n            }\n        }\n    }\n    onAnimationEnd(event) {\n        switch (event.toState) {\n            case 'void':\n                this.onContainerDestroy();\n                break;\n        }\n    }\n    getElementToFocus() {\n        switch (this.defaultFocus) {\n            case 'accept':\n                return DomHandler.findSingle(this.container, '.p-confirm-popup-accept');\n            case 'reject':\n                return DomHandler.findSingle(this.container, '.p-confirm-popup-reject');\n            case 'none':\n                return null;\n        }\n    }\n    align() {\n        if (this.autoZIndex) {\n            ZIndexUtils.set('overlay', this.container, this.config.zIndex.overlay);\n        }\n        DomHandler.absolutePosition(this.container, this.confirmation.target);\n        const containerOffset = DomHandler.getOffset(this.container);\n        const targetOffset = DomHandler.getOffset(this.confirmation.target);\n        let arrowLeft = 0;\n        if (containerOffset.left < targetOffset.left) {\n            arrowLeft = targetOffset.left - containerOffset.left;\n        }\n        this.container.style.setProperty('--overlayArrowLeft', `${arrowLeft}px`);\n        if (containerOffset.top < targetOffset.top) {\n            DomHandler.addClass(this.container, 'p-confirm-popup-flipped');\n        }\n    }\n    hide() {\n        this.visible = false;\n    }\n    accept() {\n        if (this.confirmation.acceptEvent) {\n            this.confirmation.acceptEvent.emit();\n        }\n        this.hide();\n    }\n    reject() {\n        if (this.confirmation.rejectEvent) {\n            this.confirmation.rejectEvent.emit();\n        }\n        this.hide();\n    }\n    onOverlayClick(event) {\n        this.overlayService.add({\n            originalEvent: event,\n            target: this.el.nativeElement\n        });\n    }\n    bindListeners() {\n        this.bindDocumentClickListener();\n        this.bindDocumentResizeListener();\n        this.bindScrollListener();\n    }\n    unbindListeners() {\n        this.unbindDocumentClickListener();\n        this.unbindDocumentResizeListener();\n        this.unbindScrollListener();\n    }\n    bindDocumentClickListener() {\n        if (!this.documentClickListener) {\n            let documentEvent = DomHandler.isIOS() ? 'touchstart' : 'click';\n            const documentTarget = this.el ? this.el.nativeElement.ownerDocument : document;\n            this.documentClickListener = this.renderer.listen(documentTarget, documentEvent, (event) => {\n                let targetElement = this.confirmation.target;\n                if (this.container !== event.target && !this.container.contains(event.target) &&\n                    targetElement !== event.target && !targetElement.contains(event.target)) {\n                    this.hide();\n                }\n            });\n        }\n    }\n    unbindDocumentClickListener() {\n        if (this.documentClickListener) {\n            this.documentClickListener();\n            this.documentClickListener = null;\n        }\n    }\n    onWindowResize() {\n        this.hide();\n    }\n    bindDocumentResizeListener() {\n        this.documentResizeListener = this.onWindowResize.bind(this);\n        window.addEventListener('resize', this.documentResizeListener);\n    }\n    unbindDocumentResizeListener() {\n        if (this.documentResizeListener) {\n            window.removeEventListener('resize', this.documentResizeListener);\n            this.documentResizeListener = null;\n        }\n    }\n    bindScrollListener() {\n        if (!this.scrollHandler) {\n            this.scrollHandler = new ConnectedOverlayScrollHandler(this.confirmation.target, () => {\n                if (this.visible) {\n                    this.hide();\n                }\n            });\n        }\n        this.scrollHandler.bindScrollListener();\n    }\n    unbindScrollListener() {\n        if (this.scrollHandler) {\n            this.scrollHandler.unbindScrollListener();\n        }\n    }\n    unsubscribeConfirmationSubscriptions() {\n        if (this.confirmation) {\n            if (this.confirmation.acceptEvent) {\n                this.confirmation.acceptEvent.unsubscribe();\n            }\n            if (this.confirmation.rejectEvent) {\n                this.confirmation.rejectEvent.unsubscribe();\n            }\n        }\n    }\n    onContainerDestroy() {\n        this.unbindListeners();\n        this.unsubscribeConfirmationSubscriptions();\n        if (this.autoZIndex) {\n            ZIndexUtils.clear(this.container);\n        }\n        this.confirmation = null;\n        this.container = null;\n    }\n    restoreAppend() {\n        if (this.container) {\n            document.body.removeChild(this.container);\n        }\n        this.onContainerDestroy();\n    }\n    get acceptButtonLabel() {\n        return this.confirmation.acceptLabel || this.config.getTranslation(TranslationKeys.ACCEPT);\n    }\n    get rejectButtonLabel() {\n        return this.confirmation.rejectLabel || this.config.getTranslation(TranslationKeys.REJECT);\n    }\n    ngOnDestroy() {\n        this.restoreAppend();\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n}\nConfirmPopup.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: ConfirmPopup, deps: [{ token: i0.ElementRef }, { token: i1.ConfirmationService }, { token: i0.Renderer2 }, { token: i0.ChangeDetectorRef }, { token: i1.PrimeNGConfig }, { token: i1.OverlayService }], target: i0.ɵɵFactoryTarget.Component });\nConfirmPopup.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.7\", type: ConfirmPopup, selector: \"p-confirmPopup\", inputs: { key: \"key\", defaultFocus: \"defaultFocus\", showTransitionOptions: \"showTransitionOptions\", hideTransitionOptions: \"hideTransitionOptions\", autoZIndex: \"autoZIndex\", baseZIndex: \"baseZIndex\", style: \"style\", styleClass: \"styleClass\", visible: \"visible\" }, host: { classAttribute: \"p-element\" }, ngImport: i0, template: `\n        <div *ngIf=\"visible\" [ngClass]=\"'p-confirm-popup p-component'\" [ngStyle]=\"style\" [class]=\"styleClass\" (click)=\"onOverlayClick($event)\"\n            [@animation]=\"{value: 'open', params: {showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions}}\"\n            (@animation.start)=\"onAnimationStart($event)\" (@animation.done)=\"onAnimationEnd($event)\">\n            <div #content class=\"p-confirm-popup-content\">\n                <i [ngClass]=\"'p-confirm-popup-icon'\" [class]=\"confirmation.icon\" *ngIf=\"confirmation.icon\"></i>\n                <span class=\"p-confirm-popup-message\">{{confirmation.message}}</span>\n            </div>\n            <div class=\"p-confirm-popup-footer\">\n                <button type=\"button\" pButton [icon]=\"confirmation.rejectIcon\" [label]=\"rejectButtonLabel\" (click)=\"reject()\" [ngClass]=\"'p-confirm-popup-reject p-button-sm'\"\n                    [class]=\"confirmation.rejectButtonStyleClass || 'p-button-text'\" *ngIf=\"confirmation.rejectVisible !== false\" [attr.aria-label]=\"rejectButtonLabel\"></button>\n                <button type=\"button\" pButton [icon]=\"confirmation.acceptIcon\" [label]=\"acceptButtonLabel\" (click)=\"accept()\" [ngClass]=\"'p-confirm-popup-accept p-button-sm'\"\n                    [class]=\"confirmation.acceptButtonStyleClass\" *ngIf=\"confirmation.acceptVisible !== false\" [attr.aria-label]=\"acceptButtonLabel\"></button>\n            </div>\n        </div>\n    `, isInline: true, styles: [\".p-confirm-popup{position:absolute;margin-top:10px;top:0;left:0}.p-confirm-popup-flipped{margin-top:0;margin-bottom:10px}.p-confirm-popup:after,.p-confirm-popup:before{bottom:100%;left:calc(var(--overlayArrowLeft, 0) + 1.25rem);content:\\\" \\\";height:0;width:0;position:absolute;pointer-events:none}.p-confirm-popup:after{border-width:8px;margin-left:-8px}.p-confirm-popup:before{border-width:10px;margin-left:-10px}.p-confirm-popup-flipped:after,.p-confirm-popup-flipped:before{bottom:auto;top:100%}.p-confirm-popup.p-confirm-popup-flipped:after{border-bottom-color:transparent}.p-confirm-popup.p-confirm-popup-flipped:before{border-bottom-color:transparent}.p-confirm-popup .p-confirm-popup-content{display:flex;align-items:center}\\n\"], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i2.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { type: i3.ButtonDirective, selector: \"[pButton]\", inputs: [\"iconPos\", \"loadingIcon\", \"label\", \"icon\", \"loading\"] }], animations: [\n        trigger('animation', [\n            state('void', style({\n                transform: 'scaleY(0.8)',\n                opacity: 0\n            })),\n            state('open', style({\n                transform: 'translateY(0)',\n                opacity: 1\n            })),\n            transition('void => open', animate('{{showTransitionParams}}')),\n            transition('open => void', animate('{{hideTransitionParams}}')),\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: ConfirmPopup, decorators: [{\n            type: Component,\n            args: [{ selector: 'p-confirmPopup', template: `\n        <div *ngIf=\"visible\" [ngClass]=\"'p-confirm-popup p-component'\" [ngStyle]=\"style\" [class]=\"styleClass\" (click)=\"onOverlayClick($event)\"\n            [@animation]=\"{value: 'open', params: {showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions}}\"\n            (@animation.start)=\"onAnimationStart($event)\" (@animation.done)=\"onAnimationEnd($event)\">\n            <div #content class=\"p-confirm-popup-content\">\n                <i [ngClass]=\"'p-confirm-popup-icon'\" [class]=\"confirmation.icon\" *ngIf=\"confirmation.icon\"></i>\n                <span class=\"p-confirm-popup-message\">{{confirmation.message}}</span>\n            </div>\n            <div class=\"p-confirm-popup-footer\">\n                <button type=\"button\" pButton [icon]=\"confirmation.rejectIcon\" [label]=\"rejectButtonLabel\" (click)=\"reject()\" [ngClass]=\"'p-confirm-popup-reject p-button-sm'\"\n                    [class]=\"confirmation.rejectButtonStyleClass || 'p-button-text'\" *ngIf=\"confirmation.rejectVisible !== false\" [attr.aria-label]=\"rejectButtonLabel\"></button>\n                <button type=\"button\" pButton [icon]=\"confirmation.acceptIcon\" [label]=\"acceptButtonLabel\" (click)=\"accept()\" [ngClass]=\"'p-confirm-popup-accept p-button-sm'\"\n                    [class]=\"confirmation.acceptButtonStyleClass\" *ngIf=\"confirmation.acceptVisible !== false\" [attr.aria-label]=\"acceptButtonLabel\"></button>\n            </div>\n        </div>\n    `, animations: [\n                        trigger('animation', [\n                            state('void', style({\n                                transform: 'scaleY(0.8)',\n                                opacity: 0\n                            })),\n                            state('open', style({\n                                transform: 'translateY(0)',\n                                opacity: 1\n                            })),\n                            transition('void => open', animate('{{showTransitionParams}}')),\n                            transition('open => void', animate('{{hideTransitionParams}}')),\n                        ])\n                    ], changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, host: {\n                        'class': 'p-element'\n                    }, styles: [\".p-confirm-popup{position:absolute;margin-top:10px;top:0;left:0}.p-confirm-popup-flipped{margin-top:0;margin-bottom:10px}.p-confirm-popup:after,.p-confirm-popup:before{bottom:100%;left:calc(var(--overlayArrowLeft, 0) + 1.25rem);content:\\\" \\\";height:0;width:0;position:absolute;pointer-events:none}.p-confirm-popup:after{border-width:8px;margin-left:-8px}.p-confirm-popup:before{border-width:10px;margin-left:-10px}.p-confirm-popup-flipped:after,.p-confirm-popup-flipped:before{bottom:auto;top:100%}.p-confirm-popup.p-confirm-popup-flipped:after{border-bottom-color:transparent}.p-confirm-popup.p-confirm-popup-flipped:before{border-bottom-color:transparent}.p-confirm-popup .p-confirm-popup-content{display:flex;align-items:center}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.ConfirmationService }, { type: i0.Renderer2 }, { type: i0.ChangeDetectorRef }, { type: i1.PrimeNGConfig }, { type: i1.OverlayService }]; }, propDecorators: { key: [{\n                type: Input\n            }], defaultFocus: [{\n                type: Input\n            }], showTransitionOptions: [{\n                type: Input\n            }], hideTransitionOptions: [{\n                type: Input\n            }], autoZIndex: [{\n                type: Input\n            }], baseZIndex: [{\n                type: Input\n            }], style: [{\n                type: Input\n            }], styleClass: [{\n                type: Input\n            }], visible: [{\n                type: Input\n            }] } });\nclass ConfirmPopupModule {\n}\nConfirmPopupModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: ConfirmPopupModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nConfirmPopupModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: ConfirmPopupModule, declarations: [ConfirmPopup], imports: [CommonModule, ButtonModule], exports: [ConfirmPopup] });\nConfirmPopupModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: ConfirmPopupModule, imports: [[CommonModule, ButtonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: ConfirmPopupModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, ButtonModule],\n                    exports: [ConfirmPopup],\n                    declarations: [ConfirmPopup]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ConfirmPopup, ConfirmPopupModule };\n"]},"metadata":{},"sourceType":"module"}