{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { forwardRef, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Output, ViewChild, ContentChildren, NgModule } from '@angular/core';\nimport * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { trigger, transition, style, animate } from '@angular/animations';\nimport { InputTextModule } from 'primeng/inputtext';\nimport * as i4 from 'primeng/button';\nimport { ButtonModule } from 'primeng/button';\nimport * as i5 from 'primeng/ripple';\nimport { RippleModule } from 'primeng/ripple';\nimport * as i1 from 'primeng/api';\nimport { TranslationKeys, PrimeTemplate, SharedModule } from 'primeng/api';\nimport { DomHandler, ConnectedOverlayScrollHandler } from 'primeng/dom';\nimport { UniqueComponentId, ObjectUtils, ZIndexUtils } from 'primeng/utils';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as i2 from '@angular/cdk/scrolling';\nimport { CdkVirtualScrollViewport, ScrollingModule } from '@angular/cdk/scrolling';\nconst _c0 = [\"container\"];\nconst _c1 = [\"in\"];\nconst _c2 = [\"multiIn\"];\nconst _c3 = [\"multiContainer\"];\nconst _c4 = [\"ddBtn\"];\n\nconst _c5 = function (a0, a1) {\n  return {\n    \"p-autocomplete-dd-input\": a0,\n    \"p-disabled\": a1\n  };\n};\n\nfunction AutoComplete_input_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"input\", 8, 9);\n    i0.ɵɵlistener(\"click\", function AutoComplete_input_2_Template_input_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return ctx_r9.onInputClick($event);\n    })(\"input\", function AutoComplete_input_2_Template_input_input_0_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return ctx_r11.onInput($event);\n    })(\"keydown\", function AutoComplete_input_2_Template_input_keydown_0_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return ctx_r12.onKeydown($event);\n    })(\"keyup\", function AutoComplete_input_2_Template_input_keyup_0_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return ctx_r13.onKeyup($event);\n    })(\"focus\", function AutoComplete_input_2_Template_input_focus_0_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return ctx_r14.onInputFocus($event);\n    })(\"blur\", function AutoComplete_input_2_Template_input_blur_0_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return ctx_r15.onInputBlur($event);\n    })(\"change\", function AutoComplete_input_2_Template_input_change_0_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return ctx_r16.onInputChange($event);\n    })(\"paste\", function AutoComplete_input_2_Template_input_paste_0_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return ctx_r17.onInputPaste($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r1.inputStyleClass);\n    i0.ɵɵproperty(\"ngStyle\", ctx_r1.inputStyle)(\"autocomplete\", ctx_r1.autocomplete)(\"ngClass\", i0.ɵɵpureFunction2(20, _c5, ctx_r1.dropdown, ctx_r1.disabled))(\"value\", ctx_r1.inputFieldValue)(\"readonly\", ctx_r1.readonly)(\"disabled\", ctx_r1.disabled);\n    i0.ɵɵattribute(\"type\", ctx_r1.type)(\"id\", ctx_r1.inputId)(\"required\", ctx_r1.required)(\"name\", ctx_r1.name)(\"autofocus\", ctx_r1.autofocus)(\"placeholder\", ctx_r1.placeholder)(\"size\", ctx_r1.size)(\"maxlength\", ctx_r1.maxlength)(\"tabindex\", ctx_r1.tabindex)(\"aria-label\", ctx_r1.ariaLabel)(\"aria-labelledby\", ctx_r1.ariaLabelledBy)(\"aria-required\", ctx_r1.required);\n  }\n}\n\nfunction AutoComplete_i_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r19 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"i\", 10);\n    i0.ɵɵlistener(\"click\", function AutoComplete_i_3_Template_i_click_0_listener() {\n      i0.ɵɵrestoreView(_r19);\n      const ctx_r18 = i0.ɵɵnextContext();\n      return ctx_r18.clear();\n    });\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AutoComplete_i_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r21 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"i\", 10);\n    i0.ɵɵlistener(\"click\", function AutoComplete_i_4_Template_i_click_0_listener() {\n      i0.ɵɵrestoreView(_r21);\n      const ctx_r20 = i0.ɵɵnextContext();\n      return ctx_r20.clear();\n    });\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AutoComplete_ul_5_li_2_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction AutoComplete_ul_5_li_2_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 22);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const val_r25 = i0.ɵɵnextContext().$implicit;\n    const ctx_r28 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r28.resolveFieldData(val_r25));\n  }\n}\n\nfunction AutoComplete_ul_5_li_2_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r32 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"span\", 23);\n    i0.ɵɵlistener(\"click\", function AutoComplete_ul_5_li_2_span_4_Template_span_click_0_listener() {\n      i0.ɵɵrestoreView(_r32);\n      i0.ɵɵnextContext();\n\n      const _r26 = i0.ɵɵreference(1);\n\n      const ctx_r31 = i0.ɵɵnextContext(2);\n      return ctx_r31.removeItem(_r26);\n    });\n    i0.ɵɵelementEnd();\n  }\n}\n\nconst _c6 = function (a0) {\n  return {\n    $implicit: a0\n  };\n};\n\nfunction AutoComplete_ul_5_li_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 17, 18);\n    i0.ɵɵtemplate(2, AutoComplete_ul_5_li_2_ng_container_2_Template, 1, 0, \"ng-container\", 19);\n    i0.ɵɵtemplate(3, AutoComplete_ul_5_li_2_span_3_Template, 2, 1, \"span\", 20);\n    i0.ɵɵtemplate(4, AutoComplete_ul_5_li_2_span_4_Template, 1, 0, \"span\", 21);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const val_r25 = ctx.$implicit;\n    const ctx_r23 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r23.selectedItemTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(4, _c6, val_r25));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r23.selectedItemTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r23.disabled && !ctx_r23.readonly);\n  }\n}\n\nconst _c7 = function (a0, a1) {\n  return {\n    \"p-disabled\": a0,\n    \"p-focus\": a1\n  };\n};\n\nfunction AutoComplete_ul_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r34 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"ul\", 11, 12);\n    i0.ɵɵlistener(\"click\", function AutoComplete_ul_5_Template_ul_click_0_listener() {\n      i0.ɵɵrestoreView(_r34);\n\n      const _r24 = i0.ɵɵreference(5);\n\n      return _r24.focus();\n    });\n    i0.ɵɵtemplate(2, AutoComplete_ul_5_li_2_Template, 5, 6, \"li\", 13);\n    i0.ɵɵelementStart(3, \"li\", 14);\n    i0.ɵɵelementStart(4, \"input\", 15, 16);\n    i0.ɵɵlistener(\"input\", function AutoComplete_ul_5_Template_input_input_4_listener($event) {\n      i0.ɵɵrestoreView(_r34);\n      const ctx_r35 = i0.ɵɵnextContext();\n      return ctx_r35.onInput($event);\n    })(\"click\", function AutoComplete_ul_5_Template_input_click_4_listener($event) {\n      i0.ɵɵrestoreView(_r34);\n      const ctx_r36 = i0.ɵɵnextContext();\n      return ctx_r36.onInputClick($event);\n    })(\"keydown\", function AutoComplete_ul_5_Template_input_keydown_4_listener($event) {\n      i0.ɵɵrestoreView(_r34);\n      const ctx_r37 = i0.ɵɵnextContext();\n      return ctx_r37.onKeydown($event);\n    })(\"keyup\", function AutoComplete_ul_5_Template_input_keyup_4_listener($event) {\n      i0.ɵɵrestoreView(_r34);\n      const ctx_r38 = i0.ɵɵnextContext();\n      return ctx_r38.onKeyup($event);\n    })(\"focus\", function AutoComplete_ul_5_Template_input_focus_4_listener($event) {\n      i0.ɵɵrestoreView(_r34);\n      const ctx_r39 = i0.ɵɵnextContext();\n      return ctx_r39.onInputFocus($event);\n    })(\"blur\", function AutoComplete_ul_5_Template_input_blur_4_listener($event) {\n      i0.ɵɵrestoreView(_r34);\n      const ctx_r40 = i0.ɵɵnextContext();\n      return ctx_r40.onInputBlur($event);\n    })(\"change\", function AutoComplete_ul_5_Template_input_change_4_listener($event) {\n      i0.ɵɵrestoreView(_r34);\n      const ctx_r41 = i0.ɵɵnextContext();\n      return ctx_r41.onInputChange($event);\n    })(\"paste\", function AutoComplete_ul_5_Template_input_paste_4_listener($event) {\n      i0.ɵɵrestoreView(_r34);\n      const ctx_r42 = i0.ɵɵnextContext();\n      return ctx_r42.onInputPaste($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(20, _c7, ctx_r4.disabled, ctx_r4.focus));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.value);\n    i0.ɵɵadvance(2);\n    i0.ɵɵclassMap(ctx_r4.inputStyleClass);\n    i0.ɵɵproperty(\"disabled\", ctx_r4.disabled)(\"readonly\", ctx_r4.readonly)(\"autocomplete\", ctx_r4.autocomplete)(\"ngStyle\", ctx_r4.inputStyle);\n    i0.ɵɵattribute(\"type\", ctx_r4.type)(\"id\", ctx_r4.inputId)(\"placeholder\", ctx_r4.value && ctx_r4.value.length ? null : ctx_r4.placeholder)(\"tabindex\", ctx_r4.tabindex)(\"maxlength\", ctx_r4.maxlength)(\"autofocus\", ctx_r4.autofocus)(\"aria-label\", ctx_r4.ariaLabel)(\"aria-labelledby\", ctx_r4.ariaLabelledBy)(\"aria-required\", ctx_r4.required)(\"aria-controls\", ctx_r4.listId)(\"aria-expanded\", ctx_r4.overlayVisible)(\"aria-activedescendant\", \"p-highlighted-option\");\n  }\n}\n\nfunction AutoComplete_i_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 24);\n  }\n}\n\nfunction AutoComplete_button_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r45 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 25, 26);\n    i0.ɵɵlistener(\"click\", function AutoComplete_button_7_Template_button_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r45);\n      const ctx_r44 = i0.ɵɵnextContext();\n      return ctx_r44.handleDropdownClick($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"icon\", ctx_r6.dropdownIcon)(\"disabled\", ctx_r6.disabled);\n    i0.ɵɵattribute(\"aria-label\", ctx_r6.dropdownAriaLabel)(\"tabindex\", ctx_r6.tabindex);\n  }\n}\n\nfunction AutoComplete_div_8_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction AutoComplete_div_8_ng_container_4_ng_template_1_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const optgroup_r54 = i0.ɵɵnextContext().$implicit;\n    const ctx_r55 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r55.getOptionGroupLabel(optgroup_r54) || \"empty\");\n  }\n}\n\nfunction AutoComplete_div_8_ng_container_4_ng_template_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction AutoComplete_div_8_ng_container_4_ng_template_1_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction AutoComplete_div_8_ng_container_4_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 34);\n    i0.ɵɵtemplate(1, AutoComplete_div_8_ng_container_4_ng_template_1_span_1_Template, 2, 1, \"span\", 31);\n    i0.ɵɵtemplate(2, AutoComplete_div_8_ng_container_4_ng_template_1_ng_container_2_Template, 1, 0, \"ng-container\", 19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, AutoComplete_div_8_ng_container_4_ng_template_1_ng_container_3_Template, 1, 0, \"ng-container\", 19);\n  }\n\n  if (rf & 2) {\n    const optgroup_r54 = ctx.$implicit;\n    i0.ɵɵnextContext(2);\n\n    const _r50 = i0.ɵɵreference(7);\n\n    const ctx_r53 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r53.groupTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r53.groupTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(5, _c6, optgroup_r54));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r50)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(7, _c6, ctx_r53.getOptionGroupChildren(optgroup_r54)));\n  }\n}\n\nfunction AutoComplete_div_8_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, AutoComplete_div_8_ng_container_4_ng_template_1_Template, 4, 9, \"ng-template\", 33);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r48 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r48.suggestions);\n  }\n}\n\nfunction AutoComplete_div_8_ng_container_5_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction AutoComplete_div_8_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, AutoComplete_div_8_ng_container_5_ng_container_1_Template, 1, 0, \"ng-container\", 19);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n\n    const _r50 = i0.ɵɵreference(7);\n\n    const ctx_r49 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r50)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c6, ctx_r49.suggestions));\n  }\n}\n\nfunction AutoComplete_div_8_ng_template_6_ng_container_0_li_1_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r66 = i0.ɵɵnextContext().$implicit;\n    const ctx_r68 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r68.resolveFieldData(option_r66));\n  }\n}\n\nfunction AutoComplete_div_8_ng_template_6_ng_container_0_li_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nconst _c8 = function (a0) {\n  return {\n    \"p-highlight\": a0\n  };\n};\n\nconst _c9 = function (a0, a1) {\n  return {\n    $implicit: a0,\n    index: a1\n  };\n};\n\nfunction AutoComplete_div_8_ng_template_6_ng_container_0_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r72 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"li\", 39);\n    i0.ɵɵlistener(\"click\", function AutoComplete_div_8_ng_template_6_ng_container_0_li_1_Template_li_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r72);\n      const option_r66 = restoredCtx.$implicit;\n      const ctx_r71 = i0.ɵɵnextContext(4);\n      return ctx_r71.selectItem(option_r66);\n    });\n    i0.ɵɵtemplate(1, AutoComplete_div_8_ng_template_6_ng_container_0_li_1_span_1_Template, 2, 1, \"span\", 31);\n    i0.ɵɵtemplate(2, AutoComplete_div_8_ng_template_6_ng_container_0_li_1_ng_container_2_Template, 1, 0, \"ng-container\", 19);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r66 = ctx.$implicit;\n    const idx_r67 = ctx.index;\n    const ctx_r65 = i0.ɵɵnextContext(4);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(5, _c8, option_r66 === ctx_r65.highlightOption))(\"id\", ctx_r65.highlightOption == option_r66 ? \"p-highlighted-option\" : \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r65.itemTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r65.itemTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(7, _c9, option_r66, idx_r67));\n  }\n}\n\nfunction AutoComplete_div_8_ng_template_6_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, AutoComplete_div_8_ng_template_6_ng_container_0_li_1_Template, 3, 10, \"li\", 38);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const suggestionsToDisplay_r60 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", suggestionsToDisplay_r60);\n  }\n}\n\nfunction AutoComplete_div_8_ng_template_6_ng_template_1_cdk_virtual_scroll_viewport_0_ng_container_1_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r76 = i0.ɵɵnextContext().$implicit;\n    const ctx_r83 = i0.ɵɵnextContext(5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r83.resolveFieldData(option_r76));\n  }\n}\n\nfunction AutoComplete_div_8_ng_template_6_ng_template_1_cdk_virtual_scroll_viewport_0_ng_container_1_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nconst _c10 = function (a0) {\n  return {\n    \"height\": a0\n  };\n};\n\nfunction AutoComplete_div_8_ng_template_6_ng_template_1_cdk_virtual_scroll_viewport_0_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r87 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"li\", 43);\n    i0.ɵɵlistener(\"click\", function AutoComplete_div_8_ng_template_6_ng_template_1_cdk_virtual_scroll_viewport_0_ng_container_1_Template_li_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r87);\n      const option_r76 = restoredCtx.$implicit;\n      const ctx_r86 = i0.ɵɵnextContext(5);\n      return ctx_r86.selectItem(option_r76);\n    });\n    i0.ɵɵtemplate(2, AutoComplete_div_8_ng_template_6_ng_template_1_cdk_virtual_scroll_viewport_0_ng_container_1_span_2_Template, 2, 1, \"span\", 31);\n    i0.ɵɵtemplate(3, AutoComplete_div_8_ng_template_6_ng_template_1_cdk_virtual_scroll_viewport_0_ng_container_1_ng_container_3_Template, 1, 0, \"ng-container\", 19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const option_r76 = ctx.$implicit;\n    const i_r77 = ctx.index;\n    const ctx_r75 = i0.ɵɵnextContext(5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(6, _c8, option_r76 === ctx_r75.highlightOption))(\"ngStyle\", i0.ɵɵpureFunction1(8, _c10, ctx_r75.itemSize + \"px\"))(\"id\", ctx_r75.highlightOption == option_r76 ? \"p-highlighted-option\" : \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r75.itemTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r75.itemTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(10, _c9, option_r76, i_r77));\n  }\n}\n\nfunction AutoComplete_div_8_ng_template_6_ng_template_1_cdk_virtual_scroll_viewport_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"cdk-virtual-scroll-viewport\", 41);\n    i0.ɵɵtemplate(1, AutoComplete_div_8_ng_template_6_ng_template_1_cdk_virtual_scroll_viewport_0_ng_container_1_Template, 4, 13, \"ng-container\", 42);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const suggestionsToDisplay_r60 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r74 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(3, _c10, ctx_r74.scrollHeight))(\"itemSize\", ctx_r74.itemSize);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"cdkVirtualForOf\", suggestionsToDisplay_r60);\n  }\n}\n\nfunction AutoComplete_div_8_ng_template_6_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, AutoComplete_div_8_ng_template_6_ng_template_1_cdk_virtual_scroll_viewport_0_Template, 2, 5, \"cdk-virtual-scroll-viewport\", 40);\n  }\n\n  if (rf & 2) {\n    const ctx_r63 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r63.virtualScroll && !ctx_r63.noResults);\n  }\n}\n\nfunction AutoComplete_div_8_ng_template_6_li_3_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r89 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r89.emptyMessageLabel, \" \");\n  }\n}\n\nfunction AutoComplete_div_8_ng_template_6_li_3_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, null, 45);\n  }\n}\n\nfunction AutoComplete_div_8_ng_template_6_li_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 44);\n    i0.ɵɵtemplate(1, AutoComplete_div_8_ng_template_6_li_3_ng_container_1_Template, 2, 1, \"ng-container\", 35);\n    i0.ɵɵtemplate(2, AutoComplete_div_8_ng_template_6_li_3_ng_container_2_Template, 2, 0, \"ng-container\", 29);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r64 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r64.emptyTemplate)(\"ngIfElse\", ctx_r64.empty);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r64.emptyTemplate);\n  }\n}\n\nfunction AutoComplete_div_8_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, AutoComplete_div_8_ng_template_6_ng_container_0_Template, 2, 1, \"ng-container\", 35);\n    i0.ɵɵtemplate(1, AutoComplete_div_8_ng_template_6_ng_template_1_Template, 1, 1, \"ng-template\", null, 36, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtemplate(3, AutoComplete_div_8_ng_template_6_li_3_Template, 3, 3, \"li\", 37);\n  }\n\n  if (rf & 2) {\n    const _r62 = i0.ɵɵreference(2);\n\n    const ctx_r51 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r51.virtualScroll)(\"ngIfElse\", _r62);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r51.noResults && ctx_r51.showEmptyMessage);\n  }\n}\n\nfunction AutoComplete_div_8_ng_container_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nconst _c11 = function () {\n  return [\"p-autocomplete-panel p-component\"];\n};\n\nconst _c12 = function (a0, a1) {\n  return {\n    showTransitionParams: a0,\n    hideTransitionParams: a1\n  };\n};\n\nconst _c13 = function (a1) {\n  return {\n    value: \"visible\",\n    params: a1\n  };\n};\n\nconst _c14 = function (a0) {\n  return {\n    \"p-autocomplete-virtualscroll\": a0\n  };\n};\n\nfunction AutoComplete_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r93 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 27, 28);\n    i0.ɵɵlistener(\"click\", function AutoComplete_div_8_Template_div_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r93);\n      const ctx_r92 = i0.ɵɵnextContext();\n      return ctx_r92.onOverlayClick($event);\n    })(\"@overlayAnimation.start\", function AutoComplete_div_8_Template_div_animation_overlayAnimation_start_0_listener($event) {\n      i0.ɵɵrestoreView(_r93);\n      const ctx_r94 = i0.ɵɵnextContext();\n      return ctx_r94.onOverlayAnimationStart($event);\n    })(\"@overlayAnimation.done\", function AutoComplete_div_8_Template_div_animation_overlayAnimation_done_0_listener($event) {\n      i0.ɵɵrestoreView(_r93);\n      const ctx_r95 = i0.ɵɵnextContext();\n      return ctx_r95.onOverlayAnimationEnd($event);\n    });\n    i0.ɵɵtemplate(2, AutoComplete_div_8_ng_container_2_Template, 1, 0, \"ng-container\", 29);\n    i0.ɵɵelementStart(3, \"ul\", 30);\n    i0.ɵɵtemplate(4, AutoComplete_div_8_ng_container_4_Template, 2, 1, \"ng-container\", 31);\n    i0.ɵɵtemplate(5, AutoComplete_div_8_ng_container_5_Template, 2, 4, \"ng-container\", 31);\n    i0.ɵɵtemplate(6, AutoComplete_div_8_ng_template_6_Template, 4, 3, \"ng-template\", null, 32, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(8, AutoComplete_div_8_ng_container_8_Template, 1, 0, \"ng-container\", 29);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r7.panelStyleClass);\n    i0.ɵɵstyleProp(\"max-height\", ctx_r7.virtualScroll ? \"auto\" : ctx_r7.scrollHeight);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction0(13, _c11))(\"ngStyle\", ctx_r7.panelStyle)(\"@overlayAnimation\", i0.ɵɵpureFunction1(17, _c13, i0.ɵɵpureFunction2(14, _c12, ctx_r7.showTransitionOptions, ctx_r7.hideTransitionOptions)));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r7.headerTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(19, _c14, ctx_r7.virtualScroll));\n    i0.ɵɵattribute(\"id\", ctx_r7.listId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r7.group);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r7.group);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r7.footerTemplate);\n  }\n}\n\nconst _c15 = function (a1, a2) {\n  return {\n    \"p-autocomplete p-component\": true,\n    \"p-autocomplete-dd\": a1,\n    \"p-autocomplete-multiple\": a2\n  };\n};\n\nconst AUTOCOMPLETE_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => AutoComplete),\n  multi: true\n};\n\nclass AutoComplete {\n  constructor(el, renderer, cd, differs, config, overlayService) {\n    this.el = el;\n    this.renderer = renderer;\n    this.cd = cd;\n    this.differs = differs;\n    this.config = config;\n    this.overlayService = overlayService;\n    this.minLength = 1;\n    this.delay = 300;\n    this.type = 'text';\n    this.autoZIndex = true;\n    this.baseZIndex = 0;\n    this.dropdownIcon = \"pi pi-chevron-down\";\n    this.unique = true;\n    this.completeOnFocus = false;\n    this.showClear = false;\n    this.completeMethod = new EventEmitter();\n    this.onSelect = new EventEmitter();\n    this.onUnselect = new EventEmitter();\n    this.onFocus = new EventEmitter();\n    this.onBlur = new EventEmitter();\n    this.onDropdownClick = new EventEmitter();\n    this.onClear = new EventEmitter();\n    this.onKeyUp = new EventEmitter();\n    this.onShow = new EventEmitter();\n    this.onHide = new EventEmitter();\n    this.scrollHeight = '200px';\n    this.dropdownMode = 'blank';\n    this.showTransitionOptions = '.12s cubic-bezier(0, 0, 0.2, 1)';\n    this.hideTransitionOptions = '.1s linear';\n    this.autocomplete = 'off';\n\n    this.onModelChange = () => {};\n\n    this.onModelTouched = () => {};\n\n    this.overlayVisible = false;\n    this.focus = false;\n    this.inputFieldValue = null;\n    this.inputValue = null;\n    this.differ = differs.find([]).create(null);\n    this.listId = UniqueComponentId() + '_list';\n  }\n\n  get suggestions() {\n    return this._suggestions;\n  }\n\n  set suggestions(val) {\n    this._suggestions = val;\n    this.handleSuggestionsChange();\n  }\n\n  ngAfterViewChecked() {\n    //Use timeouts as since Angular 4.2, AfterViewChecked is broken and not called after panel is updated\n    if (this.suggestionsUpdated && this.overlay && this.overlay.offsetParent) {\n      setTimeout(() => {\n        if (this.overlay) {\n          this.alignOverlay();\n        }\n      }, 1);\n      this.suggestionsUpdated = false;\n    }\n\n    if (this.highlightOptionChanged) {\n      setTimeout(() => {\n        if (this.overlay && this.itemsWrapper) {\n          let listItem = DomHandler.findSingle(this.overlay, 'li.p-highlight');\n\n          if (listItem) {\n            DomHandler.scrollInView(this.itemsWrapper, listItem);\n          }\n\n          if (this.virtualScroll && this.viewPort) {\n            let range = this.viewPort.getRenderedRange();\n            this.updateVirtualScrollSelectedIndex();\n\n            if (range.start > this.virtualScrollSelectedIndex || range.end < this.virtualScrollSelectedIndex) {\n              this.viewPort.scrollToIndex(this.virtualScrollSelectedIndex);\n            }\n          }\n        }\n      }, 1);\n      this.highlightOptionChanged = false;\n    }\n  }\n\n  handleSuggestionsChange() {\n    if (this._suggestions != null && this.loading) {\n      this.highlightOption = null;\n\n      if (this._suggestions.length) {\n        this.noResults = false;\n        this.show();\n        this.suggestionsUpdated = true;\n\n        if (this.autoHighlight) {\n          this.highlightOption = this._suggestions[0];\n        }\n      } else {\n        this.noResults = true;\n\n        if (this.showEmptyMessage) {\n          this.show();\n          this.suggestionsUpdated = true;\n        } else {\n          this.hide();\n        }\n      }\n\n      this.loading = false;\n    }\n  }\n\n  ngAfterContentInit() {\n    this.templates.forEach(item => {\n      switch (item.getType()) {\n        case 'item':\n          this.itemTemplate = item.template;\n          break;\n\n        case 'group':\n          this.groupTemplate = item.template;\n          break;\n\n        case 'selectedItem':\n          this.selectedItemTemplate = item.template;\n          break;\n\n        case 'header':\n          this.headerTemplate = item.template;\n          break;\n\n        case 'empty':\n          this.emptyTemplate = item.template;\n          break;\n\n        case 'footer':\n          this.footerTemplate = item.template;\n          break;\n\n        default:\n          this.itemTemplate = item.template;\n          break;\n      }\n    });\n  }\n\n  updateVirtualScrollSelectedIndex() {\n    if (this.highlightOption && this.suggestions && this.suggestions.length) {\n      this.virtualScrollSelectedIndex = this.findOptionIndex(this.highlightOption, this.suggestions);\n    }\n  }\n\n  writeValue(value) {\n    this.value = value;\n    this.filled = this.value && this.value != '';\n    this.updateInputField();\n    this.cd.markForCheck();\n  }\n\n  getOptionGroupChildren(optionGroup) {\n    return this.optionGroupChildren ? ObjectUtils.resolveFieldData(optionGroup, this.optionGroupChildren) : optionGroup.items;\n  }\n\n  getOptionGroupLabel(optionGroup) {\n    return this.optionGroupLabel ? ObjectUtils.resolveFieldData(optionGroup, this.optionGroupLabel) : optionGroup.label != undefined ? optionGroup.label : optionGroup;\n  }\n\n  registerOnChange(fn) {\n    this.onModelChange = fn;\n  }\n\n  registerOnTouched(fn) {\n    this.onModelTouched = fn;\n  }\n\n  setDisabledState(val) {\n    this.disabled = val;\n    this.cd.markForCheck();\n  }\n\n  onInput(event) {\n    // When an input element with a placeholder is clicked, the onInput event is invoked in IE.\n    if (!this.inputKeyDown && DomHandler.isIE()) {\n      return;\n    }\n\n    if (this.timeout) {\n      clearTimeout(this.timeout);\n    }\n\n    let value = event.target.value;\n    this.inputValue = value;\n\n    if (!this.multiple && !this.forceSelection) {\n      this.onModelChange(value);\n    }\n\n    if (value.length === 0 && !this.multiple) {\n      this.hide();\n      this.onClear.emit(event);\n      this.onModelChange(value);\n    }\n\n    if (value.length >= this.minLength) {\n      this.timeout = setTimeout(() => {\n        this.search(event, value);\n      }, this.delay);\n    } else {\n      this.hide();\n    }\n\n    this.updateFilledState();\n    this.inputKeyDown = false;\n  }\n\n  onInputClick(event) {\n    if (this.documentClickListener) {\n      this.inputClick = true;\n    }\n  }\n\n  search(event, query) {\n    //allow empty string but not undefined or null\n    if (query === undefined || query === null) {\n      return;\n    }\n\n    this.loading = true;\n    this.completeMethod.emit({\n      originalEvent: event,\n      query: query\n    });\n  }\n\n  selectItem(option, focus = true) {\n    if (this.forceSelectionUpdateModelTimeout) {\n      clearTimeout(this.forceSelectionUpdateModelTimeout);\n      this.forceSelectionUpdateModelTimeout = null;\n    }\n\n    if (this.multiple) {\n      this.multiInputEL.nativeElement.value = '';\n      this.value = this.value || [];\n\n      if (!this.isSelected(option) || !this.unique) {\n        this.value = [...this.value, option];\n        this.onModelChange(this.value);\n      }\n    } else {\n      this.inputEL.nativeElement.value = this.resolveFieldData(option);\n      this.value = option;\n      this.onModelChange(this.value);\n    }\n\n    this.onSelect.emit(option);\n    this.updateFilledState();\n\n    if (focus) {\n      this.itemClicked = true;\n      this.focusInput();\n    }\n  }\n\n  show() {\n    if (this.multiInputEL || this.inputEL) {\n      let hasFocus = this.multiple ? this.multiInputEL.nativeElement.ownerDocument.activeElement == this.multiInputEL.nativeElement : this.inputEL.nativeElement.ownerDocument.activeElement == this.inputEL.nativeElement;\n\n      if (!this.overlayVisible && hasFocus) {\n        this.overlayVisible = true;\n      }\n    }\n  }\n\n  clear() {\n    if (this.multiple) {\n      this.value = null;\n    } else {\n      this.inputValue = null;\n      this.inputEL.nativeElement.value = '';\n    }\n\n    this.onModelChange(this.value);\n    this.onClear.emit();\n  }\n\n  onOverlayAnimationStart(event) {\n    switch (event.toState) {\n      case 'visible':\n        this.overlay = event.element;\n        this.itemsWrapper = this.virtualScroll ? DomHandler.findSingle(this.overlay, '.cdk-virtual-scroll-viewport') : this.overlay;\n        this.appendOverlay();\n\n        if (this.autoZIndex) {\n          ZIndexUtils.set('overlay', this.overlay, this.baseZIndex + this.config.zIndex.overlay);\n        }\n\n        this.alignOverlay();\n        this.bindDocumentClickListener();\n        this.bindDocumentResizeListener();\n        this.bindScrollListener();\n        this.onShow.emit(event);\n        break;\n\n      case 'void':\n        this.onOverlayHide();\n        break;\n    }\n  }\n\n  onOverlayAnimationEnd(event) {\n    switch (event.toState) {\n      case 'void':\n        if (this.autoZIndex) {\n          ZIndexUtils.clear(event.element);\n        }\n\n        break;\n    }\n  }\n\n  onOverlayClick(event) {\n    this.overlayService.add({\n      originalEvent: event,\n      target: this.el.nativeElement\n    });\n  }\n\n  appendOverlay() {\n    if (this.appendTo) {\n      if (this.appendTo === 'body') document.body.appendChild(this.overlay);else DomHandler.appendChild(this.overlay, this.appendTo);\n\n      if (!this.overlay.style.minWidth) {\n        this.overlay.style.minWidth = DomHandler.getWidth(this.el.nativeElement.children[0]) + 'px';\n      }\n    }\n  }\n\n  resolveFieldData(value) {\n    let data = this.field ? ObjectUtils.resolveFieldData(value, this.field) : value;\n    return data !== (null || undefined) ? data : '';\n  }\n\n  restoreOverlayAppend() {\n    if (this.overlay && this.appendTo) {\n      this.el.nativeElement.appendChild(this.overlay);\n    }\n  }\n\n  alignOverlay() {\n    if (this.appendTo) DomHandler.absolutePosition(this.overlay, this.multiple ? this.multiContainerEL.nativeElement : this.inputEL.nativeElement);else DomHandler.relativePosition(this.overlay, this.multiple ? this.multiContainerEL.nativeElement : this.inputEL.nativeElement);\n  }\n\n  hide() {\n    this.overlayVisible = false;\n    this.cd.markForCheck();\n  }\n\n  handleDropdownClick(event) {\n    if (!this.overlayVisible) {\n      this.focusInput();\n      let queryValue = this.multiple ? this.multiInputEL.nativeElement.value : this.inputEL.nativeElement.value;\n      if (this.dropdownMode === 'blank') this.search(event, '');else if (this.dropdownMode === 'current') this.search(event, queryValue);\n      this.onDropdownClick.emit({\n        originalEvent: event,\n        query: queryValue\n      });\n    } else {\n      this.hide();\n    }\n  }\n\n  focusInput() {\n    if (this.multiple) this.multiInputEL.nativeElement.focus();else this.inputEL.nativeElement.focus();\n  }\n\n  get emptyMessageLabel() {\n    return this.emptyMessage || this.config.getTranslation(TranslationKeys.EMPTY_MESSAGE);\n  }\n\n  removeItem(item) {\n    let itemIndex = DomHandler.index(item);\n    let removedValue = this.value[itemIndex];\n    this.value = this.value.filter((val, i) => i != itemIndex);\n    this.onModelChange(this.value);\n    this.updateFilledState();\n    this.onUnselect.emit(removedValue);\n  }\n\n  onKeydown(event) {\n    if (this.overlayVisible) {\n      switch (event.which) {\n        //down\n        case 40:\n          if (this.group) {\n            let highlightItemIndex = this.findOptionGroupIndex(this.highlightOption, this.suggestions);\n\n            if (highlightItemIndex !== -1) {\n              let nextItemIndex = highlightItemIndex.itemIndex + 1;\n\n              if (nextItemIndex < this.getOptionGroupChildren(this.suggestions[highlightItemIndex.groupIndex]).length) {\n                this.highlightOption = this.getOptionGroupChildren(this.suggestions[highlightItemIndex.groupIndex])[nextItemIndex];\n                this.highlightOptionChanged = true;\n              } else if (this.suggestions[highlightItemIndex.groupIndex + 1]) {\n                this.highlightOption = this.getOptionGroupChildren(this.suggestions[highlightItemIndex.groupIndex + 1])[0];\n                this.highlightOptionChanged = true;\n              }\n            } else {\n              this.highlightOption = this.getOptionGroupChildren(this.suggestions[0])[0];\n            }\n          } else {\n            let highlightItemIndex = this.findOptionIndex(this.highlightOption, this.suggestions);\n\n            if (highlightItemIndex != -1) {\n              var nextItemIndex = highlightItemIndex + 1;\n\n              if (nextItemIndex != this.suggestions.length) {\n                this.highlightOption = this.suggestions[nextItemIndex];\n                this.highlightOptionChanged = true;\n              }\n            } else {\n              this.highlightOption = this.suggestions[0];\n            }\n          }\n\n          event.preventDefault();\n          break;\n        //up\n\n        case 38:\n          if (this.group) {\n            let highlightItemIndex = this.findOptionGroupIndex(this.highlightOption, this.suggestions);\n\n            if (highlightItemIndex !== -1) {\n              let prevItemIndex = highlightItemIndex.itemIndex - 1;\n\n              if (prevItemIndex >= 0) {\n                this.highlightOption = this.getOptionGroupChildren(this.suggestions[highlightItemIndex.groupIndex])[prevItemIndex];\n                this.highlightOptionChanged = true;\n              } else if (prevItemIndex < 0) {\n                let prevGroup = this.suggestions[highlightItemIndex.groupIndex - 1];\n\n                if (prevGroup) {\n                  this.highlightOption = this.getOptionGroupChildren(prevGroup)[this.getOptionGroupChildren(prevGroup).length - 1];\n                  this.highlightOptionChanged = true;\n                }\n              }\n            }\n          } else {\n            let highlightItemIndex = this.findOptionIndex(this.highlightOption, this.suggestions);\n\n            if (highlightItemIndex > 0) {\n              let prevItemIndex = highlightItemIndex - 1;\n              this.highlightOption = this.suggestions[prevItemIndex];\n              this.highlightOptionChanged = true;\n            }\n          }\n\n          event.preventDefault();\n          break;\n        //enter\n\n        case 13:\n          if (this.highlightOption) {\n            this.selectItem(this.highlightOption);\n            this.hide();\n          }\n\n          event.preventDefault();\n          break;\n        //escape\n\n        case 27:\n          this.hide();\n          event.preventDefault();\n          break;\n        //tab\n\n        case 9:\n          if (this.highlightOption) {\n            this.selectItem(this.highlightOption);\n          }\n\n          this.hide();\n          break;\n      }\n    } else {\n      if (event.which === 40 && this.suggestions) {\n        this.search(event, event.target.value);\n      } else if (event.ctrlKey && event.key === 'z' && !this.multiple) {\n        this.inputEL.nativeElement.value = this.resolveFieldData(null);\n        this.value = '';\n        this.onModelChange(this.value);\n      } else if (event.ctrlKey && event.key === 'z' && this.multiple) {\n        this.value.pop();\n        this.onModelChange(this.value);\n        this.updateFilledState();\n      }\n    }\n\n    if (this.multiple) {\n      switch (event.which) {\n        //backspace\n        case 8:\n          if (this.value && this.value.length && !this.multiInputEL.nativeElement.value) {\n            this.value = [...this.value];\n            const removedValue = this.value.pop();\n            this.onModelChange(this.value);\n            this.updateFilledState();\n            this.onUnselect.emit(removedValue);\n          }\n\n          break;\n      }\n    }\n\n    this.inputKeyDown = true;\n  }\n\n  onKeyup(event) {\n    this.onKeyUp.emit(event);\n  }\n\n  onInputFocus(event) {\n    if (!this.itemClicked && this.completeOnFocus) {\n      let queryValue = this.multiple ? this.multiInputEL.nativeElement.value : this.inputEL.nativeElement.value;\n      this.search(event, queryValue);\n    }\n\n    this.focus = true;\n    this.onFocus.emit(event);\n    this.itemClicked = false;\n  }\n\n  onInputBlur(event) {\n    this.focus = false;\n    this.onModelTouched();\n    this.onBlur.emit(event);\n  }\n\n  onInputChange(event) {\n    if (this.forceSelection) {\n      let valid = false;\n      let inputValue = event.target.value.trim();\n\n      if (this.suggestions) {\n        for (let suggestion of this.suggestions) {\n          let itemValue = this.field ? ObjectUtils.resolveFieldData(suggestion, this.field) : suggestion;\n\n          if (itemValue && inputValue === itemValue.trim()) {\n            valid = true;\n            this.forceSelectionUpdateModelTimeout = setTimeout(() => {\n              this.selectItem(suggestion, false);\n            }, 250);\n            break;\n          }\n        }\n      }\n\n      if (!valid) {\n        if (this.multiple) {\n          this.multiInputEL.nativeElement.value = '';\n        } else {\n          this.value = null;\n          this.inputEL.nativeElement.value = '';\n        }\n\n        this.onClear.emit(event);\n        this.onModelChange(this.value);\n        this.updateFilledState();\n      }\n    }\n  }\n\n  onInputPaste(event) {\n    this.onKeydown(event);\n  }\n\n  isSelected(val) {\n    let selected = false;\n\n    if (this.value && this.value.length) {\n      for (let i = 0; i < this.value.length; i++) {\n        if (ObjectUtils.equals(this.value[i], val, this.dataKey)) {\n          selected = true;\n          break;\n        }\n      }\n    }\n\n    return selected;\n  }\n\n  findOptionIndex(option, suggestions) {\n    let index = -1;\n\n    if (suggestions) {\n      for (let i = 0; i < suggestions.length; i++) {\n        if (ObjectUtils.equals(option, suggestions[i])) {\n          index = i;\n          break;\n        }\n      }\n    }\n\n    return index;\n  }\n\n  findOptionGroupIndex(val, opts) {\n    let groupIndex, itemIndex;\n\n    if (opts) {\n      for (let i = 0; i < opts.length; i++) {\n        groupIndex = i;\n        itemIndex = this.findOptionIndex(val, this.getOptionGroupChildren(opts[i]));\n\n        if (itemIndex !== -1) {\n          break;\n        }\n      }\n    }\n\n    if (itemIndex !== -1) {\n      return {\n        groupIndex: groupIndex,\n        itemIndex: itemIndex\n      };\n    } else {\n      return -1;\n    }\n  }\n\n  updateFilledState() {\n    if (this.multiple) this.filled = this.value && this.value.length || this.multiInputEL && this.multiInputEL.nativeElement && this.multiInputEL.nativeElement.value != '';else this.filled = this.inputFieldValue && this.inputFieldValue != '' || this.inputEL && this.inputEL.nativeElement && this.inputEL.nativeElement.value != '';\n    ;\n  }\n\n  updateInputField() {\n    let formattedValue = this.resolveFieldData(this.value);\n    this.inputFieldValue = formattedValue;\n\n    if (this.inputEL && this.inputEL.nativeElement) {\n      this.inputEL.nativeElement.value = formattedValue;\n    }\n\n    this.updateFilledState();\n  }\n\n  bindDocumentClickListener() {\n    if (!this.documentClickListener) {\n      const documentTarget = this.el ? this.el.nativeElement.ownerDocument : 'document';\n      this.documentClickListener = this.renderer.listen(documentTarget, 'click', event => {\n        if (event.which === 3) {\n          return;\n        }\n\n        if (!this.inputClick && !this.isDropdownClick(event)) {\n          this.hide();\n        }\n\n        this.inputClick = false;\n        this.cd.markForCheck();\n      });\n    }\n  }\n\n  isDropdownClick(event) {\n    if (this.dropdown) {\n      let target = event.target;\n      return target === this.dropdownButton.nativeElement || target.parentNode === this.dropdownButton.nativeElement;\n    } else {\n      return false;\n    }\n  }\n\n  unbindDocumentClickListener() {\n    if (this.documentClickListener) {\n      this.documentClickListener();\n      this.documentClickListener = null;\n    }\n  }\n\n  bindDocumentResizeListener() {\n    this.documentResizeListener = this.onWindowResize.bind(this);\n    window.addEventListener('resize', this.documentResizeListener);\n  }\n\n  unbindDocumentResizeListener() {\n    if (this.documentResizeListener) {\n      window.removeEventListener('resize', this.documentResizeListener);\n      this.documentResizeListener = null;\n    }\n  }\n\n  onWindowResize() {\n    this.hide();\n  }\n\n  bindScrollListener() {\n    if (!this.scrollHandler) {\n      this.scrollHandler = new ConnectedOverlayScrollHandler(this.containerEL.nativeElement, () => {\n        if (this.overlayVisible) {\n          this.hide();\n        }\n      });\n    }\n\n    this.scrollHandler.bindScrollListener();\n  }\n\n  unbindScrollListener() {\n    if (this.scrollHandler) {\n      this.scrollHandler.unbindScrollListener();\n    }\n  }\n\n  onOverlayHide() {\n    this.unbindDocumentClickListener();\n    this.unbindDocumentResizeListener();\n    this.unbindScrollListener();\n    this.overlay = null;\n    this.onHide.emit();\n  }\n\n  ngOnDestroy() {\n    if (this.forceSelectionUpdateModelTimeout) {\n      clearTimeout(this.forceSelectionUpdateModelTimeout);\n      this.forceSelectionUpdateModelTimeout = null;\n    }\n\n    if (this.scrollHandler) {\n      this.scrollHandler.destroy();\n      this.scrollHandler = null;\n    }\n\n    if (this.overlay) {\n      ZIndexUtils.clear(this.overlay);\n    }\n\n    this.restoreOverlayAppend();\n    this.onOverlayHide();\n  }\n\n}\n\nAutoComplete.ɵfac = function AutoComplete_Factory(t) {\n  return new (t || AutoComplete)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.IterableDiffers), i0.ɵɵdirectiveInject(i1.PrimeNGConfig), i0.ɵɵdirectiveInject(i1.OverlayService));\n};\n\nAutoComplete.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: AutoComplete,\n  selectors: [[\"p-autoComplete\"]],\n  contentQueries: function AutoComplete_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 4);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templates = _t);\n    }\n  },\n  viewQuery: function AutoComplete_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n      i0.ɵɵviewQuery(_c1, 5);\n      i0.ɵɵviewQuery(_c2, 5);\n      i0.ɵɵviewQuery(_c3, 5);\n      i0.ɵɵviewQuery(_c4, 5);\n      i0.ɵɵviewQuery(CdkVirtualScrollViewport, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.containerEL = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.inputEL = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.multiInputEL = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.multiContainerEL = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dropdownButton = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.viewPort = _t.first);\n    }\n  },\n  hostAttrs: [1, \"p-element\", \"p-inputwrapper\"],\n  hostVars: 6,\n  hostBindings: function AutoComplete_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"p-inputwrapper-filled\", ctx.filled)(\"p-inputwrapper-focus\", ctx.focus && !ctx.disabled || ctx.overlayVisible)(\"p-autocomplete-clearable\", ctx.showClear && !ctx.disabled);\n    }\n  },\n  inputs: {\n    minLength: \"minLength\",\n    delay: \"delay\",\n    style: \"style\",\n    panelStyle: \"panelStyle\",\n    styleClass: \"styleClass\",\n    panelStyleClass: \"panelStyleClass\",\n    inputStyle: \"inputStyle\",\n    inputId: \"inputId\",\n    inputStyleClass: \"inputStyleClass\",\n    placeholder: \"placeholder\",\n    readonly: \"readonly\",\n    disabled: \"disabled\",\n    virtualScroll: \"virtualScroll\",\n    itemSize: \"itemSize\",\n    maxlength: \"maxlength\",\n    name: \"name\",\n    required: \"required\",\n    size: \"size\",\n    appendTo: \"appendTo\",\n    autoHighlight: \"autoHighlight\",\n    forceSelection: \"forceSelection\",\n    type: \"type\",\n    autoZIndex: \"autoZIndex\",\n    baseZIndex: \"baseZIndex\",\n    ariaLabel: \"ariaLabel\",\n    dropdownAriaLabel: \"dropdownAriaLabel\",\n    ariaLabelledBy: \"ariaLabelledBy\",\n    dropdownIcon: \"dropdownIcon\",\n    unique: \"unique\",\n    group: \"group\",\n    completeOnFocus: \"completeOnFocus\",\n    showClear: \"showClear\",\n    field: \"field\",\n    scrollHeight: \"scrollHeight\",\n    dropdown: \"dropdown\",\n    showEmptyMessage: \"showEmptyMessage\",\n    dropdownMode: \"dropdownMode\",\n    multiple: \"multiple\",\n    tabindex: \"tabindex\",\n    dataKey: \"dataKey\",\n    emptyMessage: \"emptyMessage\",\n    showTransitionOptions: \"showTransitionOptions\",\n    hideTransitionOptions: \"hideTransitionOptions\",\n    autofocus: \"autofocus\",\n    autocomplete: \"autocomplete\",\n    optionGroupChildren: \"optionGroupChildren\",\n    optionGroupLabel: \"optionGroupLabel\",\n    suggestions: \"suggestions\"\n  },\n  outputs: {\n    completeMethod: \"completeMethod\",\n    onSelect: \"onSelect\",\n    onUnselect: \"onUnselect\",\n    onFocus: \"onFocus\",\n    onBlur: \"onBlur\",\n    onDropdownClick: \"onDropdownClick\",\n    onClear: \"onClear\",\n    onKeyUp: \"onKeyUp\",\n    onShow: \"onShow\",\n    onHide: \"onHide\"\n  },\n  features: [i0.ɵɵProvidersFeature([AUTOCOMPLETE_VALUE_ACCESSOR])],\n  decls: 9,\n  vars: 14,\n  consts: [[3, \"ngClass\", \"ngStyle\"], [\"container\", \"\"], [\"class\", \"p-autocomplete-input p-inputtext p-component\", \"aria-autocomplete\", \"list\", \"role\", \"searchbox\", 3, \"ngStyle\", \"class\", \"autocomplete\", \"ngClass\", \"value\", \"readonly\", \"disabled\", \"click\", \"input\", \"keydown\", \"keyup\", \"focus\", \"blur\", \"change\", \"paste\", 4, \"ngIf\"], [\"class\", \"p-autocomplete-clear-icon pi pi-times\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"p-autocomplete-multiple-container p-component p-inputtext\", 3, \"ngClass\", \"click\", 4, \"ngIf\"], [\"class\", \"p-autocomplete-loader pi pi-spinner pi-spin\", 4, \"ngIf\"], [\"type\", \"button\", \"pButton\", \"\", \"class\", \"p-autocomplete-dropdown\", \"pRipple\", \"\", 3, \"icon\", \"disabled\", \"click\", 4, \"ngIf\"], [3, \"ngClass\", \"max-height\", \"ngStyle\", \"class\", \"click\", 4, \"ngIf\"], [\"aria-autocomplete\", \"list\", \"role\", \"searchbox\", 1, \"p-autocomplete-input\", \"p-inputtext\", \"p-component\", 3, \"ngStyle\", \"autocomplete\", \"ngClass\", \"value\", \"readonly\", \"disabled\", \"click\", \"input\", \"keydown\", \"keyup\", \"focus\", \"blur\", \"change\", \"paste\"], [\"in\", \"\"], [1, \"p-autocomplete-clear-icon\", \"pi\", \"pi-times\", 3, \"click\"], [1, \"p-autocomplete-multiple-container\", \"p-component\", \"p-inputtext\", 3, \"ngClass\", \"click\"], [\"multiContainer\", \"\"], [\"class\", \"p-autocomplete-token\", 4, \"ngFor\", \"ngForOf\"], [1, \"p-autocomplete-input-token\"], [\"aria-autocomplete\", \"list\", \"role\", \"searchbox\", \"aria-haspopup\", \"true\", 3, \"disabled\", \"readonly\", \"autocomplete\", \"ngStyle\", \"input\", \"click\", \"keydown\", \"keyup\", \"focus\", \"blur\", \"change\", \"paste\"], [\"multiIn\", \"\"], [1, \"p-autocomplete-token\"], [\"token\", \"\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"class\", \"p-autocomplete-token-label\", 4, \"ngIf\"], [\"class\", \"p-autocomplete-token-icon pi pi-times-circle\", 3, \"click\", 4, \"ngIf\"], [1, \"p-autocomplete-token-label\"], [1, \"p-autocomplete-token-icon\", \"pi\", \"pi-times-circle\", 3, \"click\"], [1, \"p-autocomplete-loader\", \"pi\", \"pi-spinner\", \"pi-spin\"], [\"type\", \"button\", \"pButton\", \"\", \"pRipple\", \"\", 1, \"p-autocomplete-dropdown\", 3, \"icon\", \"disabled\", \"click\"], [\"ddBtn\", \"\"], [3, \"ngClass\", \"ngStyle\", \"click\"], [\"panel\", \"\"], [4, \"ngTemplateOutlet\"], [\"role\", \"listbox\", 1, \"p-autocomplete-items\", 3, \"ngClass\"], [4, \"ngIf\"], [\"itemslist\", \"\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [1, \"p-autocomplete-item-group\"], [4, \"ngIf\", \"ngIfElse\"], [\"virtualScrollList\", \"\"], [\"class\", \"p-autocomplete-empty-message\", 4, \"ngIf\"], [\"role\", \"option\", \"class\", \"p-autocomplete-item\", \"pRipple\", \"\", 3, \"ngClass\", \"id\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"role\", \"option\", \"pRipple\", \"\", 1, \"p-autocomplete-item\", 3, \"ngClass\", \"id\", \"click\"], [3, \"ngStyle\", \"itemSize\", 4, \"ngIf\"], [3, \"ngStyle\", \"itemSize\"], [4, \"cdkVirtualFor\", \"cdkVirtualForOf\"], [\"role\", \"option\", \"pRipple\", \"\", 1, \"p-autocomplete-item\", 3, \"ngClass\", \"ngStyle\", \"id\", \"click\"], [1, \"p-autocomplete-empty-message\"], [\"empty\", \"\"]],\n  template: function AutoComplete_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"span\", 0, 1);\n      i0.ɵɵtemplate(2, AutoComplete_input_2_Template, 2, 23, \"input\", 2);\n      i0.ɵɵtemplate(3, AutoComplete_i_3_Template, 1, 0, \"i\", 3);\n      i0.ɵɵtemplate(4, AutoComplete_i_4_Template, 1, 0, \"i\", 3);\n      i0.ɵɵtemplate(5, AutoComplete_ul_5_Template, 6, 23, \"ul\", 4);\n      i0.ɵɵtemplate(6, AutoComplete_i_6_Template, 1, 0, \"i\", 5);\n      i0.ɵɵtemplate(7, AutoComplete_button_7_Template, 2, 4, \"button\", 6);\n      i0.ɵɵtemplate(8, AutoComplete_div_8_Template, 9, 21, \"div\", 7);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassMap(ctx.styleClass);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(11, _c15, ctx.dropdown, ctx.multiple))(\"ngStyle\", ctx.style);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", !ctx.multiple);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.multiple && ctx.inputValue && ctx.filled && !ctx.disabled && ctx.showClear);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.multiple && ctx.value && ctx.filled && !ctx.disabled && ctx.showClear);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.multiple);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.loading);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.dropdown);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.overlayVisible);\n    }\n  },\n  directives: [i2.CdkVirtualScrollViewport, i3.NgClass, i3.NgStyle, i3.NgIf, i3.NgForOf, i3.NgTemplateOutlet, i4.ButtonDirective, i5.Ripple, i2.CdkFixedSizeVirtualScroll, i2.CdkVirtualForOf],\n  styles: [\".p-autocomplete{display:inline-flex;position:relative}.p-autocomplete-loader{position:absolute;top:50%;margin-top:-.5rem}.p-autocomplete-dd .p-autocomplete-input{flex:1 1 auto;width:1%}.p-autocomplete-dd .p-autocomplete-input,.p-autocomplete-dd .p-autocomplete-multiple-container{border-top-right-radius:0;border-bottom-right-radius:0}.p-autocomplete-dd .p-autocomplete-dropdown{border-top-left-radius:0;border-bottom-left-radius:0}.p-autocomplete .p-autocomplete-panel{min-width:100%;top:0;left:0}.p-autocomplete-panel{position:absolute;overflow:auto}.p-autocomplete-items{margin:0;padding:0;list-style-type:none}.p-autocomplete-item{cursor:pointer;white-space:nowrap;position:relative;overflow:hidden}.p-autocomplete-multiple-container{margin:0;padding:0;list-style-type:none;cursor:text;overflow:hidden;display:flex;align-items:center;flex-wrap:wrap}.p-autocomplete-token{cursor:default;display:inline-flex;align-items:center;flex:0 0 auto}.p-autocomplete-token-icon{cursor:pointer}.p-autocomplete-input-token{flex:1 1 auto;display:inline-flex}.p-autocomplete-input-token input{border:0 none;outline:0 none;background-color:transparent;margin:0;padding:0;box-shadow:none;border-radius:0;width:100%}.p-fluid .p-autocomplete{display:flex}.p-fluid .p-autocomplete-dd .p-autocomplete-input{width:1%}.p-autocomplete-clear-icon{position:absolute;top:50%;margin-top:-.5rem;cursor:pointer}.p-autocomplete-clearable{position:relative}\\n\"],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('overlayAnimation', [transition(':enter', [style({\n      opacity: 0,\n      transform: 'scaleY(0.8)'\n    }), animate('{{showTransitionParams}}')]), transition(':leave', [animate('{{hideTransitionParams}}', style({\n      opacity: 0\n    }))])])]\n  },\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AutoComplete, [{\n    type: Component,\n    args: [{\n      selector: 'p-autoComplete',\n      template: `\n        <span #container [ngClass]=\"{'p-autocomplete p-component':true,'p-autocomplete-dd':dropdown,'p-autocomplete-multiple':multiple}\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <input *ngIf=\"!multiple\" #in [attr.type]=\"type\" [attr.id]=\"inputId\" [ngStyle]=\"inputStyle\" [class]=\"inputStyleClass\" [autocomplete]=\"autocomplete\" [attr.required]=\"required\" [attr.name]=\"name\"\n            class=\"p-autocomplete-input p-inputtext p-component\" [ngClass]=\"{'p-autocomplete-dd-input':dropdown,'p-disabled': disabled}\" [value]=\"inputFieldValue\" aria-autocomplete=\"list\" role=\"searchbox\"\n            (click)=\"onInputClick($event)\" (input)=\"onInput($event)\" (keydown)=\"onKeydown($event)\" (keyup)=\"onKeyup($event)\" [attr.autofocus]=\"autofocus\" (focus)=\"onInputFocus($event)\" (blur)=\"onInputBlur($event)\" (change)=\"onInputChange($event)\" (paste)=\"onInputPaste($event)\"\n            [attr.placeholder]=\"placeholder\" [attr.size]=\"size\" [attr.maxlength]=\"maxlength\" [attr.tabindex]=\"tabindex\" [readonly]=\"readonly\" [disabled]=\"disabled\" [attr.aria-label]=\"ariaLabel\" [attr.aria-labelledby]=\"ariaLabelledBy\" [attr.aria-required]=\"required\">\n            <i *ngIf=\"!multiple && inputValue && filled && !disabled && showClear\" class=\"p-autocomplete-clear-icon pi pi-times\" (click)=\"clear()\"></i>\n            <i *ngIf=\"multiple && value && filled && !disabled && showClear\" class=\"p-autocomplete-clear-icon pi pi-times\" (click)=\"clear()\"></i>\n            <ul *ngIf=\"multiple\" #multiContainer class=\"p-autocomplete-multiple-container p-component p-inputtext\" [ngClass]=\"{'p-disabled':disabled,'p-focus':focus}\" (click)=\"multiIn.focus()\">\n                <li #token *ngFor=\"let val of value\" class=\"p-autocomplete-token\">\n                    <ng-container *ngTemplateOutlet=\"selectedItemTemplate; context: {$implicit: val}\"></ng-container>\n                    <span *ngIf=\"!selectedItemTemplate\" class=\"p-autocomplete-token-label\">{{resolveFieldData(val)}}</span>\n                    <span  class=\"p-autocomplete-token-icon pi pi-times-circle\" (click)=\"removeItem(token)\" *ngIf=\"!disabled && !readonly\"></span>\n                </li>\n                <li class=\"p-autocomplete-input-token\">\n                    <input #multiIn [attr.type]=\"type\" [attr.id]=\"inputId\" [disabled]=\"disabled\" [attr.placeholder]=\"(value&&value.length ? null : placeholder)\" [attr.tabindex]=\"tabindex\" [attr.maxlength]=\"maxlength\" (input)=\"onInput($event)\"  (click)=\"onInputClick($event)\"\n                            (keydown)=\"onKeydown($event)\" [readonly]=\"readonly\" (keyup)=\"onKeyup($event)\" [attr.autofocus]=\"autofocus\" (focus)=\"onInputFocus($event)\" (blur)=\"onInputBlur($event)\" (change)=\"onInputChange($event)\" (paste)=\"onInputPaste($event)\" [autocomplete]=\"autocomplete\"\n                            [ngStyle]=\"inputStyle\" [class]=\"inputStyleClass\" [attr.aria-label]=\"ariaLabel\" [attr.aria-labelledby]=\"ariaLabelledBy\" [attr.aria-required]=\"required\"\n                            aria-autocomplete=\"list\" [attr.aria-controls]=\"listId\" role=\"searchbox\" [attr.aria-expanded]=\"overlayVisible\" aria-haspopup=\"true\" [attr.aria-activedescendant]=\"'p-highlighted-option'\">\n                </li>\n            </ul>\n            <i *ngIf=\"loading\" class=\"p-autocomplete-loader pi pi-spinner pi-spin\"></i><button #ddBtn type=\"button\" pButton [icon]=\"dropdownIcon\" [attr.aria-label]=\"dropdownAriaLabel\" class=\"p-autocomplete-dropdown\" [disabled]=\"disabled\" pRipple\n                (click)=\"handleDropdownClick($event)\" *ngIf=\"dropdown\" [attr.tabindex]=\"tabindex\"></button>\n            <div #panel *ngIf=\"overlayVisible\" (click)=\"onOverlayClick($event)\" [ngClass]=\"['p-autocomplete-panel p-component']\" [style.max-height]=\"virtualScroll ? 'auto' : scrollHeight\" [ngStyle]=\"panelStyle\" [class]=\"panelStyleClass\"\n                [@overlayAnimation]=\"{value: 'visible', params: {showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions}}\" (@overlayAnimation.start)=\"onOverlayAnimationStart($event)\" (@overlayAnimation.done)=\"onOverlayAnimationEnd($event)\">\n                <ng-container *ngTemplateOutlet=\"headerTemplate\"></ng-container>\n                <ul role=\"listbox\" [attr.id]=\"listId\" class=\"p-autocomplete-items\" [ngClass]=\"{'p-autocomplete-virtualscroll': virtualScroll}\">\n                    <ng-container *ngIf=\"group\">\n                        <ng-template ngFor let-optgroup [ngForOf]=\"suggestions\">\n                            <li class=\"p-autocomplete-item-group\">\n                                <span *ngIf=\"!groupTemplate\">{{getOptionGroupLabel(optgroup)||'empty'}}</span>\n                                <ng-container *ngTemplateOutlet=\"groupTemplate; context: {$implicit: optgroup}\"></ng-container>\n                            </li>\n                            <ng-container *ngTemplateOutlet=\"itemslist; context: {$implicit: getOptionGroupChildren(optgroup)}\"></ng-container>\n                        </ng-template>\n                    </ng-container>\n                    <ng-container *ngIf=\"!group\">\n                            <ng-container *ngTemplateOutlet=\"itemslist; context: {$implicit: suggestions}\"></ng-container>\n                    </ng-container>\n                    <ng-template #itemslist let-suggestionsToDisplay>\n                        <ng-container *ngIf=\"!virtualScroll; else virtualScrollList\">\n                            <li role=\"option\" *ngFor=\"let option of suggestionsToDisplay; let idx = index\" class=\"p-autocomplete-item\" pRipple [ngClass]=\"{'p-highlight': (option === highlightOption)}\" [id]=\"highlightOption == option ? 'p-highlighted-option':''\" (click)=\"selectItem(option)\">\n                                <span *ngIf=\"!itemTemplate\">{{resolveFieldData(option)}}</span>\n                                <ng-container *ngTemplateOutlet=\"itemTemplate; context: {$implicit: option, index: idx}\"></ng-container>\n                            </li>\n                        </ng-container>\n                        <ng-template #virtualScrollList>\n                            <cdk-virtual-scroll-viewport [ngStyle]=\"{'height': scrollHeight}\" [itemSize]=\"itemSize\" *ngIf=\"virtualScroll && !noResults\">\n                                <ng-container *cdkVirtualFor=\"let option of suggestionsToDisplay; let i = index; let c = count; let f = first; let l = last; let e = even; let o = odd\">\n                                    <li role=\"option\" class=\"p-autocomplete-item\" pRipple [ngClass]=\"{'p-highlight': (option === highlightOption)}\" [ngStyle]=\"{'height': itemSize + 'px'}\" [id]=\"highlightOption == option ? 'p-highlighted-option':''\" (click)=\"selectItem(option)\">\n                                        <span *ngIf=\"!itemTemplate\">{{resolveFieldData(option)}}</span>\n                                        <ng-container *ngTemplateOutlet=\"itemTemplate; context: {$implicit: option, index: i}\"></ng-container>\n                                    </li>\n                                </ng-container>\n                            </cdk-virtual-scroll-viewport>\n                        </ng-template>\n                        <li *ngIf=\"noResults && showEmptyMessage\" class=\"p-autocomplete-empty-message\">\n                            <ng-container *ngIf=\"!emptyTemplate; else empty\">\n                                {{emptyMessageLabel}}\n                            </ng-container>\n                            <ng-container #empty *ngTemplateOutlet=\"emptyTemplate\"></ng-container>\n                        </li>\n                    </ng-template>\n                </ul>\n                <ng-container *ngTemplateOutlet=\"footerTemplate\"></ng-container>\n            </div>\n        </span>\n    `,\n      animations: [trigger('overlayAnimation', [transition(':enter', [style({\n        opacity: 0,\n        transform: 'scaleY(0.8)'\n      }), animate('{{showTransitionParams}}')]), transition(':leave', [animate('{{hideTransitionParams}}', style({\n        opacity: 0\n      }))])])],\n      host: {\n        'class': 'p-element p-inputwrapper',\n        '[class.p-inputwrapper-filled]': 'filled',\n        '[class.p-inputwrapper-focus]': '(focus && !disabled) || overlayVisible',\n        '[class.p-autocomplete-clearable]': 'showClear && !disabled'\n      },\n      providers: [AUTOCOMPLETE_VALUE_ACCESSOR],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      styles: [\".p-autocomplete{display:inline-flex;position:relative}.p-autocomplete-loader{position:absolute;top:50%;margin-top:-.5rem}.p-autocomplete-dd .p-autocomplete-input{flex:1 1 auto;width:1%}.p-autocomplete-dd .p-autocomplete-input,.p-autocomplete-dd .p-autocomplete-multiple-container{border-top-right-radius:0;border-bottom-right-radius:0}.p-autocomplete-dd .p-autocomplete-dropdown{border-top-left-radius:0;border-bottom-left-radius:0}.p-autocomplete .p-autocomplete-panel{min-width:100%;top:0;left:0}.p-autocomplete-panel{position:absolute;overflow:auto}.p-autocomplete-items{margin:0;padding:0;list-style-type:none}.p-autocomplete-item{cursor:pointer;white-space:nowrap;position:relative;overflow:hidden}.p-autocomplete-multiple-container{margin:0;padding:0;list-style-type:none;cursor:text;overflow:hidden;display:flex;align-items:center;flex-wrap:wrap}.p-autocomplete-token{cursor:default;display:inline-flex;align-items:center;flex:0 0 auto}.p-autocomplete-token-icon{cursor:pointer}.p-autocomplete-input-token{flex:1 1 auto;display:inline-flex}.p-autocomplete-input-token input{border:0 none;outline:0 none;background-color:transparent;margin:0;padding:0;box-shadow:none;border-radius:0;width:100%}.p-fluid .p-autocomplete{display:flex}.p-fluid .p-autocomplete-dd .p-autocomplete-input{width:1%}.p-autocomplete-clear-icon{position:absolute;top:50%;margin-top:-.5rem;cursor:pointer}.p-autocomplete-clearable{position:relative}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.IterableDiffers\n    }, {\n      type: i1.PrimeNGConfig\n    }, {\n      type: i1.OverlayService\n    }];\n  }, {\n    minLength: [{\n      type: Input\n    }],\n    delay: [{\n      type: Input\n    }],\n    style: [{\n      type: Input\n    }],\n    panelStyle: [{\n      type: Input\n    }],\n    styleClass: [{\n      type: Input\n    }],\n    panelStyleClass: [{\n      type: Input\n    }],\n    inputStyle: [{\n      type: Input\n    }],\n    inputId: [{\n      type: Input\n    }],\n    inputStyleClass: [{\n      type: Input\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    readonly: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    virtualScroll: [{\n      type: Input\n    }],\n    itemSize: [{\n      type: Input\n    }],\n    maxlength: [{\n      type: Input\n    }],\n    name: [{\n      type: Input\n    }],\n    required: [{\n      type: Input\n    }],\n    size: [{\n      type: Input\n    }],\n    appendTo: [{\n      type: Input\n    }],\n    autoHighlight: [{\n      type: Input\n    }],\n    forceSelection: [{\n      type: Input\n    }],\n    type: [{\n      type: Input\n    }],\n    autoZIndex: [{\n      type: Input\n    }],\n    baseZIndex: [{\n      type: Input\n    }],\n    ariaLabel: [{\n      type: Input\n    }],\n    dropdownAriaLabel: [{\n      type: Input\n    }],\n    ariaLabelledBy: [{\n      type: Input\n    }],\n    dropdownIcon: [{\n      type: Input\n    }],\n    unique: [{\n      type: Input\n    }],\n    group: [{\n      type: Input\n    }],\n    completeOnFocus: [{\n      type: Input\n    }],\n    showClear: [{\n      type: Input\n    }],\n    completeMethod: [{\n      type: Output\n    }],\n    onSelect: [{\n      type: Output\n    }],\n    onUnselect: [{\n      type: Output\n    }],\n    onFocus: [{\n      type: Output\n    }],\n    onBlur: [{\n      type: Output\n    }],\n    onDropdownClick: [{\n      type: Output\n    }],\n    onClear: [{\n      type: Output\n    }],\n    onKeyUp: [{\n      type: Output\n    }],\n    onShow: [{\n      type: Output\n    }],\n    onHide: [{\n      type: Output\n    }],\n    field: [{\n      type: Input\n    }],\n    scrollHeight: [{\n      type: Input\n    }],\n    dropdown: [{\n      type: Input\n    }],\n    showEmptyMessage: [{\n      type: Input\n    }],\n    dropdownMode: [{\n      type: Input\n    }],\n    multiple: [{\n      type: Input\n    }],\n    tabindex: [{\n      type: Input\n    }],\n    dataKey: [{\n      type: Input\n    }],\n    emptyMessage: [{\n      type: Input\n    }],\n    showTransitionOptions: [{\n      type: Input\n    }],\n    hideTransitionOptions: [{\n      type: Input\n    }],\n    autofocus: [{\n      type: Input\n    }],\n    autocomplete: [{\n      type: Input\n    }],\n    optionGroupChildren: [{\n      type: Input\n    }],\n    optionGroupLabel: [{\n      type: Input\n    }],\n    containerEL: [{\n      type: ViewChild,\n      args: ['container']\n    }],\n    inputEL: [{\n      type: ViewChild,\n      args: ['in']\n    }],\n    multiInputEL: [{\n      type: ViewChild,\n      args: ['multiIn']\n    }],\n    multiContainerEL: [{\n      type: ViewChild,\n      args: ['multiContainer']\n    }],\n    dropdownButton: [{\n      type: ViewChild,\n      args: ['ddBtn']\n    }],\n    viewPort: [{\n      type: ViewChild,\n      args: [CdkVirtualScrollViewport]\n    }],\n    templates: [{\n      type: ContentChildren,\n      args: [PrimeTemplate]\n    }],\n    suggestions: [{\n      type: Input\n    }]\n  });\n})();\n\nclass AutoCompleteModule {}\n\nAutoCompleteModule.ɵfac = function AutoCompleteModule_Factory(t) {\n  return new (t || AutoCompleteModule)();\n};\n\nAutoCompleteModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: AutoCompleteModule\n});\nAutoCompleteModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, InputTextModule, ButtonModule, SharedModule, RippleModule, ScrollingModule], SharedModule, ScrollingModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AutoCompleteModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, InputTextModule, ButtonModule, SharedModule, RippleModule, ScrollingModule],\n      exports: [AutoComplete, SharedModule, ScrollingModule],\n      declarations: [AutoComplete]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { AUTOCOMPLETE_VALUE_ACCESSOR, AutoComplete, AutoCompleteModule };","map":{"version":3,"sources":["C:/Users/esthe/Documents/GitHub/Peakfit/FISICO/Frontend/node_modules/primeng/fesm2015/primeng-autocomplete.mjs"],"names":["i0","forwardRef","EventEmitter","Component","ChangeDetectionStrategy","ViewEncapsulation","Input","Output","ViewChild","ContentChildren","NgModule","i3","CommonModule","trigger","transition","style","animate","InputTextModule","i4","ButtonModule","i5","RippleModule","i1","TranslationKeys","PrimeTemplate","SharedModule","DomHandler","ConnectedOverlayScrollHandler","UniqueComponentId","ObjectUtils","ZIndexUtils","NG_VALUE_ACCESSOR","i2","CdkVirtualScrollViewport","ScrollingModule","AUTOCOMPLETE_VALUE_ACCESSOR","provide","useExisting","AutoComplete","multi","constructor","el","renderer","cd","differs","config","overlayService","minLength","delay","type","autoZIndex","baseZIndex","dropdownIcon","unique","completeOnFocus","showClear","completeMethod","onSelect","onUnselect","onFocus","onBlur","onDropdownClick","onClear","onKeyUp","onShow","onHide","scrollHeight","dropdownMode","showTransitionOptions","hideTransitionOptions","autocomplete","onModelChange","onModelTouched","overlayVisible","focus","inputFieldValue","inputValue","differ","find","create","listId","suggestions","_suggestions","val","handleSuggestionsChange","ngAfterViewChecked","suggestionsUpdated","overlay","offsetParent","setTimeout","alignOverlay","highlightOptionChanged","itemsWrapper","listItem","findSingle","scrollInView","virtualScroll","viewPort","range","getRenderedRange","updateVirtualScrollSelectedIndex","start","virtualScrollSelectedIndex","end","scrollToIndex","loading","highlightOption","length","noResults","show","autoHighlight","showEmptyMessage","hide","ngAfterContentInit","templates","forEach","item","getType","itemTemplate","template","groupTemplate","selectedItemTemplate","headerTemplate","emptyTemplate","footerTemplate","findOptionIndex","writeValue","value","filled","updateInputField","markForCheck","getOptionGroupChildren","optionGroup","optionGroupChildren","resolveFieldData","items","getOptionGroupLabel","optionGroupLabel","label","undefined","registerOnChange","fn","registerOnTouched","setDisabledState","disabled","onInput","event","inputKeyDown","isIE","timeout","clearTimeout","target","multiple","forceSelection","emit","search","updateFilledState","onInputClick","documentClickListener","inputClick","query","originalEvent","selectItem","option","forceSelectionUpdateModelTimeout","multiInputEL","nativeElement","isSelected","inputEL","itemClicked","focusInput","hasFocus","ownerDocument","activeElement","clear","onOverlayAnimationStart","toState","element","appendOverlay","set","zIndex","bindDocumentClickListener","bindDocumentResizeListener","bindScrollListener","onOverlayHide","onOverlayAnimationEnd","onOverlayClick","add","appendTo","document","body","appendChild","minWidth","getWidth","children","data","field","restoreOverlayAppend","absolutePosition","multiContainerEL","relativePosition","handleDropdownClick","queryValue","emptyMessageLabel","emptyMessage","getTranslation","EMPTY_MESSAGE","removeItem","itemIndex","index","removedValue","filter","i","onKeydown","which","group","highlightItemIndex","findOptionGroupIndex","nextItemIndex","groupIndex","preventDefault","prevItemIndex","prevGroup","ctrlKey","key","pop","onKeyup","onInputFocus","onInputBlur","onInputChange","valid","trim","suggestion","itemValue","onInputPaste","selected","equals","dataKey","opts","formattedValue","documentTarget","listen","isDropdownClick","dropdown","dropdownButton","parentNode","unbindDocumentClickListener","documentResizeListener","onWindowResize","bind","window","addEventListener","unbindDocumentResizeListener","removeEventListener","scrollHandler","containerEL","unbindScrollListener","ngOnDestroy","destroy","ɵfac","ElementRef","Renderer2","ChangeDetectorRef","IterableDiffers","PrimeNGConfig","OverlayService","ɵcmp","NgClass","NgStyle","NgIf","NgForOf","NgTemplateOutlet","ButtonDirective","Ripple","CdkFixedSizeVirtualScroll","CdkVirtualForOf","opacity","transform","args","selector","animations","host","providers","changeDetection","OnPush","encapsulation","None","styles","panelStyle","styleClass","panelStyleClass","inputStyle","inputId","inputStyleClass","placeholder","readonly","itemSize","maxlength","name","required","size","ariaLabel","dropdownAriaLabel","ariaLabelledBy","tabindex","autofocus","AutoCompleteModule","ɵmod","ɵinj","imports","exports","declarations"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { forwardRef, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Output, ViewChild, ContentChildren, NgModule } from '@angular/core';\nimport * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { trigger, transition, style, animate } from '@angular/animations';\nimport { InputTextModule } from 'primeng/inputtext';\nimport * as i4 from 'primeng/button';\nimport { ButtonModule } from 'primeng/button';\nimport * as i5 from 'primeng/ripple';\nimport { RippleModule } from 'primeng/ripple';\nimport * as i1 from 'primeng/api';\nimport { TranslationKeys, PrimeTemplate, SharedModule } from 'primeng/api';\nimport { DomHandler, ConnectedOverlayScrollHandler } from 'primeng/dom';\nimport { UniqueComponentId, ObjectUtils, ZIndexUtils } from 'primeng/utils';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as i2 from '@angular/cdk/scrolling';\nimport { CdkVirtualScrollViewport, ScrollingModule } from '@angular/cdk/scrolling';\n\nconst AUTOCOMPLETE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => AutoComplete),\n    multi: true\n};\nclass AutoComplete {\n    constructor(el, renderer, cd, differs, config, overlayService) {\n        this.el = el;\n        this.renderer = renderer;\n        this.cd = cd;\n        this.differs = differs;\n        this.config = config;\n        this.overlayService = overlayService;\n        this.minLength = 1;\n        this.delay = 300;\n        this.type = 'text';\n        this.autoZIndex = true;\n        this.baseZIndex = 0;\n        this.dropdownIcon = \"pi pi-chevron-down\";\n        this.unique = true;\n        this.completeOnFocus = false;\n        this.showClear = false;\n        this.completeMethod = new EventEmitter();\n        this.onSelect = new EventEmitter();\n        this.onUnselect = new EventEmitter();\n        this.onFocus = new EventEmitter();\n        this.onBlur = new EventEmitter();\n        this.onDropdownClick = new EventEmitter();\n        this.onClear = new EventEmitter();\n        this.onKeyUp = new EventEmitter();\n        this.onShow = new EventEmitter();\n        this.onHide = new EventEmitter();\n        this.scrollHeight = '200px';\n        this.dropdownMode = 'blank';\n        this.showTransitionOptions = '.12s cubic-bezier(0, 0, 0.2, 1)';\n        this.hideTransitionOptions = '.1s linear';\n        this.autocomplete = 'off';\n        this.onModelChange = () => { };\n        this.onModelTouched = () => { };\n        this.overlayVisible = false;\n        this.focus = false;\n        this.inputFieldValue = null;\n        this.inputValue = null;\n        this.differ = differs.find([]).create(null);\n        this.listId = UniqueComponentId() + '_list';\n    }\n    get suggestions() {\n        return this._suggestions;\n    }\n    set suggestions(val) {\n        this._suggestions = val;\n        this.handleSuggestionsChange();\n    }\n    ngAfterViewChecked() {\n        //Use timeouts as since Angular 4.2, AfterViewChecked is broken and not called after panel is updated\n        if (this.suggestionsUpdated && this.overlay && this.overlay.offsetParent) {\n            setTimeout(() => {\n                if (this.overlay) {\n                    this.alignOverlay();\n                }\n            }, 1);\n            this.suggestionsUpdated = false;\n        }\n        if (this.highlightOptionChanged) {\n            setTimeout(() => {\n                if (this.overlay && this.itemsWrapper) {\n                    let listItem = DomHandler.findSingle(this.overlay, 'li.p-highlight');\n                    if (listItem) {\n                        DomHandler.scrollInView(this.itemsWrapper, listItem);\n                    }\n                    if (this.virtualScroll && this.viewPort) {\n                        let range = this.viewPort.getRenderedRange();\n                        this.updateVirtualScrollSelectedIndex();\n                        if (range.start > this.virtualScrollSelectedIndex || range.end < this.virtualScrollSelectedIndex) {\n                            this.viewPort.scrollToIndex(this.virtualScrollSelectedIndex);\n                        }\n                    }\n                }\n            }, 1);\n            this.highlightOptionChanged = false;\n        }\n    }\n    handleSuggestionsChange() {\n        if (this._suggestions != null && this.loading) {\n            this.highlightOption = null;\n            if (this._suggestions.length) {\n                this.noResults = false;\n                this.show();\n                this.suggestionsUpdated = true;\n                if (this.autoHighlight) {\n                    this.highlightOption = this._suggestions[0];\n                }\n            }\n            else {\n                this.noResults = true;\n                if (this.showEmptyMessage) {\n                    this.show();\n                    this.suggestionsUpdated = true;\n                }\n                else {\n                    this.hide();\n                }\n            }\n            this.loading = false;\n        }\n    }\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch (item.getType()) {\n                case 'item':\n                    this.itemTemplate = item.template;\n                    break;\n                case 'group':\n                    this.groupTemplate = item.template;\n                    break;\n                case 'selectedItem':\n                    this.selectedItemTemplate = item.template;\n                    break;\n                case 'header':\n                    this.headerTemplate = item.template;\n                    break;\n                case 'empty':\n                    this.emptyTemplate = item.template;\n                    break;\n                case 'footer':\n                    this.footerTemplate = item.template;\n                    break;\n                default:\n                    this.itemTemplate = item.template;\n                    break;\n            }\n        });\n    }\n    updateVirtualScrollSelectedIndex() {\n        if (this.highlightOption && this.suggestions && this.suggestions.length) {\n            this.virtualScrollSelectedIndex = this.findOptionIndex(this.highlightOption, this.suggestions);\n        }\n    }\n    writeValue(value) {\n        this.value = value;\n        this.filled = this.value && this.value != '';\n        this.updateInputField();\n        this.cd.markForCheck();\n    }\n    getOptionGroupChildren(optionGroup) {\n        return this.optionGroupChildren ? ObjectUtils.resolveFieldData(optionGroup, this.optionGroupChildren) : optionGroup.items;\n    }\n    getOptionGroupLabel(optionGroup) {\n        return this.optionGroupLabel ? ObjectUtils.resolveFieldData(optionGroup, this.optionGroupLabel) : (optionGroup.label != undefined ? optionGroup.label : optionGroup);\n    }\n    registerOnChange(fn) {\n        this.onModelChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onModelTouched = fn;\n    }\n    setDisabledState(val) {\n        this.disabled = val;\n        this.cd.markForCheck();\n    }\n    onInput(event) {\n        // When an input element with a placeholder is clicked, the onInput event is invoked in IE.\n        if (!this.inputKeyDown && DomHandler.isIE()) {\n            return;\n        }\n        if (this.timeout) {\n            clearTimeout(this.timeout);\n        }\n        let value = event.target.value;\n        this.inputValue = value;\n        if (!this.multiple && !this.forceSelection) {\n            this.onModelChange(value);\n        }\n        if (value.length === 0 && !this.multiple) {\n            this.hide();\n            this.onClear.emit(event);\n            this.onModelChange(value);\n        }\n        if (value.length >= this.minLength) {\n            this.timeout = setTimeout(() => {\n                this.search(event, value);\n            }, this.delay);\n        }\n        else {\n            this.hide();\n        }\n        this.updateFilledState();\n        this.inputKeyDown = false;\n    }\n    onInputClick(event) {\n        if (this.documentClickListener) {\n            this.inputClick = true;\n        }\n    }\n    search(event, query) {\n        //allow empty string but not undefined or null\n        if (query === undefined || query === null) {\n            return;\n        }\n        this.loading = true;\n        this.completeMethod.emit({\n            originalEvent: event,\n            query: query\n        });\n    }\n    selectItem(option, focus = true) {\n        if (this.forceSelectionUpdateModelTimeout) {\n            clearTimeout(this.forceSelectionUpdateModelTimeout);\n            this.forceSelectionUpdateModelTimeout = null;\n        }\n        if (this.multiple) {\n            this.multiInputEL.nativeElement.value = '';\n            this.value = this.value || [];\n            if (!this.isSelected(option) || !this.unique) {\n                this.value = [...this.value, option];\n                this.onModelChange(this.value);\n            }\n        }\n        else {\n            this.inputEL.nativeElement.value = this.resolveFieldData(option);\n            this.value = option;\n            this.onModelChange(this.value);\n        }\n        this.onSelect.emit(option);\n        this.updateFilledState();\n        if (focus) {\n            this.itemClicked = true;\n            this.focusInput();\n        }\n    }\n    show() {\n        if (this.multiInputEL || this.inputEL) {\n            let hasFocus = this.multiple ?\n                this.multiInputEL.nativeElement.ownerDocument.activeElement == this.multiInputEL.nativeElement :\n                this.inputEL.nativeElement.ownerDocument.activeElement == this.inputEL.nativeElement;\n            if (!this.overlayVisible && hasFocus) {\n                this.overlayVisible = true;\n            }\n        }\n    }\n    clear() {\n        if (this.multiple) {\n            this.value = null;\n        }\n        else {\n            this.inputValue = null;\n            this.inputEL.nativeElement.value = '';\n        }\n        this.onModelChange(this.value);\n        this.onClear.emit();\n    }\n    onOverlayAnimationStart(event) {\n        switch (event.toState) {\n            case 'visible':\n                this.overlay = event.element;\n                this.itemsWrapper = this.virtualScroll ? DomHandler.findSingle(this.overlay, '.cdk-virtual-scroll-viewport') : this.overlay;\n                this.appendOverlay();\n                if (this.autoZIndex) {\n                    ZIndexUtils.set('overlay', this.overlay, this.baseZIndex + this.config.zIndex.overlay);\n                }\n                this.alignOverlay();\n                this.bindDocumentClickListener();\n                this.bindDocumentResizeListener();\n                this.bindScrollListener();\n                this.onShow.emit(event);\n                break;\n            case 'void':\n                this.onOverlayHide();\n                break;\n        }\n    }\n    onOverlayAnimationEnd(event) {\n        switch (event.toState) {\n            case 'void':\n                if (this.autoZIndex) {\n                    ZIndexUtils.clear(event.element);\n                }\n                break;\n        }\n    }\n    onOverlayClick(event) {\n        this.overlayService.add({\n            originalEvent: event,\n            target: this.el.nativeElement\n        });\n    }\n    appendOverlay() {\n        if (this.appendTo) {\n            if (this.appendTo === 'body')\n                document.body.appendChild(this.overlay);\n            else\n                DomHandler.appendChild(this.overlay, this.appendTo);\n            if (!this.overlay.style.minWidth) {\n                this.overlay.style.minWidth = DomHandler.getWidth(this.el.nativeElement.children[0]) + 'px';\n            }\n        }\n    }\n    resolveFieldData(value) {\n        let data = this.field ? ObjectUtils.resolveFieldData(value, this.field) : value;\n        return data !== (null || undefined) ? data : '';\n    }\n    restoreOverlayAppend() {\n        if (this.overlay && this.appendTo) {\n            this.el.nativeElement.appendChild(this.overlay);\n        }\n    }\n    alignOverlay() {\n        if (this.appendTo)\n            DomHandler.absolutePosition(this.overlay, (this.multiple ? this.multiContainerEL.nativeElement : this.inputEL.nativeElement));\n        else\n            DomHandler.relativePosition(this.overlay, (this.multiple ? this.multiContainerEL.nativeElement : this.inputEL.nativeElement));\n    }\n    hide() {\n        this.overlayVisible = false;\n        this.cd.markForCheck();\n    }\n    handleDropdownClick(event) {\n        if (!this.overlayVisible) {\n            this.focusInput();\n            let queryValue = this.multiple ? this.multiInputEL.nativeElement.value : this.inputEL.nativeElement.value;\n            if (this.dropdownMode === 'blank')\n                this.search(event, '');\n            else if (this.dropdownMode === 'current')\n                this.search(event, queryValue);\n            this.onDropdownClick.emit({\n                originalEvent: event,\n                query: queryValue\n            });\n        }\n        else {\n            this.hide();\n        }\n    }\n    focusInput() {\n        if (this.multiple)\n            this.multiInputEL.nativeElement.focus();\n        else\n            this.inputEL.nativeElement.focus();\n    }\n    get emptyMessageLabel() {\n        return this.emptyMessage || this.config.getTranslation(TranslationKeys.EMPTY_MESSAGE);\n    }\n    removeItem(item) {\n        let itemIndex = DomHandler.index(item);\n        let removedValue = this.value[itemIndex];\n        this.value = this.value.filter((val, i) => i != itemIndex);\n        this.onModelChange(this.value);\n        this.updateFilledState();\n        this.onUnselect.emit(removedValue);\n    }\n    onKeydown(event) {\n        if (this.overlayVisible) {\n            switch (event.which) {\n                //down\n                case 40:\n                    if (this.group) {\n                        let highlightItemIndex = this.findOptionGroupIndex(this.highlightOption, this.suggestions);\n                        if (highlightItemIndex !== -1) {\n                            let nextItemIndex = highlightItemIndex.itemIndex + 1;\n                            if (nextItemIndex < (this.getOptionGroupChildren(this.suggestions[highlightItemIndex.groupIndex]).length)) {\n                                this.highlightOption = this.getOptionGroupChildren(this.suggestions[highlightItemIndex.groupIndex])[nextItemIndex];\n                                this.highlightOptionChanged = true;\n                            }\n                            else if (this.suggestions[highlightItemIndex.groupIndex + 1]) {\n                                this.highlightOption = this.getOptionGroupChildren(this.suggestions[highlightItemIndex.groupIndex + 1])[0];\n                                this.highlightOptionChanged = true;\n                            }\n                        }\n                        else {\n                            this.highlightOption = this.getOptionGroupChildren(this.suggestions[0])[0];\n                        }\n                    }\n                    else {\n                        let highlightItemIndex = this.findOptionIndex(this.highlightOption, this.suggestions);\n                        if (highlightItemIndex != -1) {\n                            var nextItemIndex = highlightItemIndex + 1;\n                            if (nextItemIndex != (this.suggestions.length)) {\n                                this.highlightOption = this.suggestions[nextItemIndex];\n                                this.highlightOptionChanged = true;\n                            }\n                        }\n                        else {\n                            this.highlightOption = this.suggestions[0];\n                        }\n                    }\n                    event.preventDefault();\n                    break;\n                //up\n                case 38:\n                    if (this.group) {\n                        let highlightItemIndex = this.findOptionGroupIndex(this.highlightOption, this.suggestions);\n                        if (highlightItemIndex !== -1) {\n                            let prevItemIndex = highlightItemIndex.itemIndex - 1;\n                            if (prevItemIndex >= 0) {\n                                this.highlightOption = this.getOptionGroupChildren(this.suggestions[highlightItemIndex.groupIndex])[prevItemIndex];\n                                this.highlightOptionChanged = true;\n                            }\n                            else if (prevItemIndex < 0) {\n                                let prevGroup = this.suggestions[highlightItemIndex.groupIndex - 1];\n                                if (prevGroup) {\n                                    this.highlightOption = this.getOptionGroupChildren(prevGroup)[this.getOptionGroupChildren(prevGroup).length - 1];\n                                    this.highlightOptionChanged = true;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        let highlightItemIndex = this.findOptionIndex(this.highlightOption, this.suggestions);\n                        if (highlightItemIndex > 0) {\n                            let prevItemIndex = highlightItemIndex - 1;\n                            this.highlightOption = this.suggestions[prevItemIndex];\n                            this.highlightOptionChanged = true;\n                        }\n                    }\n                    event.preventDefault();\n                    break;\n                //enter\n                case 13:\n                    if (this.highlightOption) {\n                        this.selectItem(this.highlightOption);\n                        this.hide();\n                    }\n                    event.preventDefault();\n                    break;\n                //escape\n                case 27:\n                    this.hide();\n                    event.preventDefault();\n                    break;\n                //tab\n                case 9:\n                    if (this.highlightOption) {\n                        this.selectItem(this.highlightOption);\n                    }\n                    this.hide();\n                    break;\n            }\n        }\n        else {\n            if (event.which === 40 && this.suggestions) {\n                this.search(event, event.target.value);\n            }\n            else if ((event.ctrlKey && event.key === 'z') && !this.multiple) {\n                this.inputEL.nativeElement.value = this.resolveFieldData(null);\n                this.value = '';\n                this.onModelChange(this.value);\n            }\n            else if ((event.ctrlKey && event.key === 'z') && this.multiple) {\n                this.value.pop();\n                this.onModelChange(this.value);\n                this.updateFilledState();\n            }\n        }\n        if (this.multiple) {\n            switch (event.which) {\n                //backspace\n                case 8:\n                    if (this.value && this.value.length && !this.multiInputEL.nativeElement.value) {\n                        this.value = [...this.value];\n                        const removedValue = this.value.pop();\n                        this.onModelChange(this.value);\n                        this.updateFilledState();\n                        this.onUnselect.emit(removedValue);\n                    }\n                    break;\n            }\n        }\n        this.inputKeyDown = true;\n    }\n    onKeyup(event) {\n        this.onKeyUp.emit(event);\n    }\n    onInputFocus(event) {\n        if (!this.itemClicked && this.completeOnFocus) {\n            let queryValue = this.multiple ? this.multiInputEL.nativeElement.value : this.inputEL.nativeElement.value;\n            this.search(event, queryValue);\n        }\n        this.focus = true;\n        this.onFocus.emit(event);\n        this.itemClicked = false;\n    }\n    onInputBlur(event) {\n        this.focus = false;\n        this.onModelTouched();\n        this.onBlur.emit(event);\n    }\n    onInputChange(event) {\n        if (this.forceSelection) {\n            let valid = false;\n            let inputValue = event.target.value.trim();\n            if (this.suggestions) {\n                for (let suggestion of this.suggestions) {\n                    let itemValue = this.field ? ObjectUtils.resolveFieldData(suggestion, this.field) : suggestion;\n                    if (itemValue && inputValue === itemValue.trim()) {\n                        valid = true;\n                        this.forceSelectionUpdateModelTimeout = setTimeout(() => {\n                            this.selectItem(suggestion, false);\n                        }, 250);\n                        break;\n                    }\n                }\n            }\n            if (!valid) {\n                if (this.multiple) {\n                    this.multiInputEL.nativeElement.value = '';\n                }\n                else {\n                    this.value = null;\n                    this.inputEL.nativeElement.value = '';\n                }\n                this.onClear.emit(event);\n                this.onModelChange(this.value);\n                this.updateFilledState();\n            }\n        }\n    }\n    onInputPaste(event) {\n        this.onKeydown(event);\n    }\n    isSelected(val) {\n        let selected = false;\n        if (this.value && this.value.length) {\n            for (let i = 0; i < this.value.length; i++) {\n                if (ObjectUtils.equals(this.value[i], val, this.dataKey)) {\n                    selected = true;\n                    break;\n                }\n            }\n        }\n        return selected;\n    }\n    findOptionIndex(option, suggestions) {\n        let index = -1;\n        if (suggestions) {\n            for (let i = 0; i < suggestions.length; i++) {\n                if (ObjectUtils.equals(option, suggestions[i])) {\n                    index = i;\n                    break;\n                }\n            }\n        }\n        return index;\n    }\n    findOptionGroupIndex(val, opts) {\n        let groupIndex, itemIndex;\n        if (opts) {\n            for (let i = 0; i < opts.length; i++) {\n                groupIndex = i;\n                itemIndex = this.findOptionIndex(val, this.getOptionGroupChildren(opts[i]));\n                if (itemIndex !== -1) {\n                    break;\n                }\n            }\n        }\n        if (itemIndex !== -1) {\n            return { groupIndex: groupIndex, itemIndex: itemIndex };\n        }\n        else {\n            return -1;\n        }\n    }\n    updateFilledState() {\n        if (this.multiple)\n            this.filled = (this.value && this.value.length) || (this.multiInputEL && this.multiInputEL.nativeElement && this.multiInputEL.nativeElement.value != '');\n        else\n            this.filled = (this.inputFieldValue && this.inputFieldValue != '') || (this.inputEL && this.inputEL.nativeElement && this.inputEL.nativeElement.value != '');\n        ;\n    }\n    updateInputField() {\n        let formattedValue = this.resolveFieldData(this.value);\n        this.inputFieldValue = formattedValue;\n        if (this.inputEL && this.inputEL.nativeElement) {\n            this.inputEL.nativeElement.value = formattedValue;\n        }\n        this.updateFilledState();\n    }\n    bindDocumentClickListener() {\n        if (!this.documentClickListener) {\n            const documentTarget = this.el ? this.el.nativeElement.ownerDocument : 'document';\n            this.documentClickListener = this.renderer.listen(documentTarget, 'click', (event) => {\n                if (event.which === 3) {\n                    return;\n                }\n                if (!this.inputClick && !this.isDropdownClick(event)) {\n                    this.hide();\n                }\n                this.inputClick = false;\n                this.cd.markForCheck();\n            });\n        }\n    }\n    isDropdownClick(event) {\n        if (this.dropdown) {\n            let target = event.target;\n            return (target === this.dropdownButton.nativeElement || target.parentNode === this.dropdownButton.nativeElement);\n        }\n        else {\n            return false;\n        }\n    }\n    unbindDocumentClickListener() {\n        if (this.documentClickListener) {\n            this.documentClickListener();\n            this.documentClickListener = null;\n        }\n    }\n    bindDocumentResizeListener() {\n        this.documentResizeListener = this.onWindowResize.bind(this);\n        window.addEventListener('resize', this.documentResizeListener);\n    }\n    unbindDocumentResizeListener() {\n        if (this.documentResizeListener) {\n            window.removeEventListener('resize', this.documentResizeListener);\n            this.documentResizeListener = null;\n        }\n    }\n    onWindowResize() {\n        this.hide();\n    }\n    bindScrollListener() {\n        if (!this.scrollHandler) {\n            this.scrollHandler = new ConnectedOverlayScrollHandler(this.containerEL.nativeElement, () => {\n                if (this.overlayVisible) {\n                    this.hide();\n                }\n            });\n        }\n        this.scrollHandler.bindScrollListener();\n    }\n    unbindScrollListener() {\n        if (this.scrollHandler) {\n            this.scrollHandler.unbindScrollListener();\n        }\n    }\n    onOverlayHide() {\n        this.unbindDocumentClickListener();\n        this.unbindDocumentResizeListener();\n        this.unbindScrollListener();\n        this.overlay = null;\n        this.onHide.emit();\n    }\n    ngOnDestroy() {\n        if (this.forceSelectionUpdateModelTimeout) {\n            clearTimeout(this.forceSelectionUpdateModelTimeout);\n            this.forceSelectionUpdateModelTimeout = null;\n        }\n        if (this.scrollHandler) {\n            this.scrollHandler.destroy();\n            this.scrollHandler = null;\n        }\n        if (this.overlay) {\n            ZIndexUtils.clear(this.overlay);\n        }\n        this.restoreOverlayAppend();\n        this.onOverlayHide();\n    }\n}\nAutoComplete.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: AutoComplete, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }, { token: i0.ChangeDetectorRef }, { token: i0.IterableDiffers }, { token: i1.PrimeNGConfig }, { token: i1.OverlayService }], target: i0.ɵɵFactoryTarget.Component });\nAutoComplete.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.7\", type: AutoComplete, selector: \"p-autoComplete\", inputs: { minLength: \"minLength\", delay: \"delay\", style: \"style\", panelStyle: \"panelStyle\", styleClass: \"styleClass\", panelStyleClass: \"panelStyleClass\", inputStyle: \"inputStyle\", inputId: \"inputId\", inputStyleClass: \"inputStyleClass\", placeholder: \"placeholder\", readonly: \"readonly\", disabled: \"disabled\", virtualScroll: \"virtualScroll\", itemSize: \"itemSize\", maxlength: \"maxlength\", name: \"name\", required: \"required\", size: \"size\", appendTo: \"appendTo\", autoHighlight: \"autoHighlight\", forceSelection: \"forceSelection\", type: \"type\", autoZIndex: \"autoZIndex\", baseZIndex: \"baseZIndex\", ariaLabel: \"ariaLabel\", dropdownAriaLabel: \"dropdownAriaLabel\", ariaLabelledBy: \"ariaLabelledBy\", dropdownIcon: \"dropdownIcon\", unique: \"unique\", group: \"group\", completeOnFocus: \"completeOnFocus\", showClear: \"showClear\", field: \"field\", scrollHeight: \"scrollHeight\", dropdown: \"dropdown\", showEmptyMessage: \"showEmptyMessage\", dropdownMode: \"dropdownMode\", multiple: \"multiple\", tabindex: \"tabindex\", dataKey: \"dataKey\", emptyMessage: \"emptyMessage\", showTransitionOptions: \"showTransitionOptions\", hideTransitionOptions: \"hideTransitionOptions\", autofocus: \"autofocus\", autocomplete: \"autocomplete\", optionGroupChildren: \"optionGroupChildren\", optionGroupLabel: \"optionGroupLabel\", suggestions: \"suggestions\" }, outputs: { completeMethod: \"completeMethod\", onSelect: \"onSelect\", onUnselect: \"onUnselect\", onFocus: \"onFocus\", onBlur: \"onBlur\", onDropdownClick: \"onDropdownClick\", onClear: \"onClear\", onKeyUp: \"onKeyUp\", onShow: \"onShow\", onHide: \"onHide\" }, host: { properties: { \"class.p-inputwrapper-filled\": \"filled\", \"class.p-inputwrapper-focus\": \"(focus && !disabled) ||\\u00A0overlayVisible\", \"class.p-autocomplete-clearable\": \"showClear && !disabled\" }, classAttribute: \"p-element p-inputwrapper\" }, providers: [AUTOCOMPLETE_VALUE_ACCESSOR], queries: [{ propertyName: \"templates\", predicate: PrimeTemplate }], viewQueries: [{ propertyName: \"containerEL\", first: true, predicate: [\"container\"], descendants: true }, { propertyName: \"inputEL\", first: true, predicate: [\"in\"], descendants: true }, { propertyName: \"multiInputEL\", first: true, predicate: [\"multiIn\"], descendants: true }, { propertyName: \"multiContainerEL\", first: true, predicate: [\"multiContainer\"], descendants: true }, { propertyName: \"dropdownButton\", first: true, predicate: [\"ddBtn\"], descendants: true }, { propertyName: \"viewPort\", first: true, predicate: CdkVirtualScrollViewport, descendants: true }], ngImport: i0, template: `\n        <span #container [ngClass]=\"{'p-autocomplete p-component':true,'p-autocomplete-dd':dropdown,'p-autocomplete-multiple':multiple}\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <input *ngIf=\"!multiple\" #in [attr.type]=\"type\" [attr.id]=\"inputId\" [ngStyle]=\"inputStyle\" [class]=\"inputStyleClass\" [autocomplete]=\"autocomplete\" [attr.required]=\"required\" [attr.name]=\"name\"\n            class=\"p-autocomplete-input p-inputtext p-component\" [ngClass]=\"{'p-autocomplete-dd-input':dropdown,'p-disabled': disabled}\" [value]=\"inputFieldValue\" aria-autocomplete=\"list\" role=\"searchbox\"\n            (click)=\"onInputClick($event)\" (input)=\"onInput($event)\" (keydown)=\"onKeydown($event)\" (keyup)=\"onKeyup($event)\" [attr.autofocus]=\"autofocus\" (focus)=\"onInputFocus($event)\" (blur)=\"onInputBlur($event)\" (change)=\"onInputChange($event)\" (paste)=\"onInputPaste($event)\"\n            [attr.placeholder]=\"placeholder\" [attr.size]=\"size\" [attr.maxlength]=\"maxlength\" [attr.tabindex]=\"tabindex\" [readonly]=\"readonly\" [disabled]=\"disabled\" [attr.aria-label]=\"ariaLabel\" [attr.aria-labelledby]=\"ariaLabelledBy\" [attr.aria-required]=\"required\">\n            <i *ngIf=\"!multiple && inputValue && filled && !disabled && showClear\" class=\"p-autocomplete-clear-icon pi pi-times\" (click)=\"clear()\"></i>\n            <i *ngIf=\"multiple && value && filled && !disabled && showClear\" class=\"p-autocomplete-clear-icon pi pi-times\" (click)=\"clear()\"></i>\n            <ul *ngIf=\"multiple\" #multiContainer class=\"p-autocomplete-multiple-container p-component p-inputtext\" [ngClass]=\"{'p-disabled':disabled,'p-focus':focus}\" (click)=\"multiIn.focus()\">\n                <li #token *ngFor=\"let val of value\" class=\"p-autocomplete-token\">\n                    <ng-container *ngTemplateOutlet=\"selectedItemTemplate; context: {$implicit: val}\"></ng-container>\n                    <span *ngIf=\"!selectedItemTemplate\" class=\"p-autocomplete-token-label\">{{resolveFieldData(val)}}</span>\n                    <span  class=\"p-autocomplete-token-icon pi pi-times-circle\" (click)=\"removeItem(token)\" *ngIf=\"!disabled && !readonly\"></span>\n                </li>\n                <li class=\"p-autocomplete-input-token\">\n                    <input #multiIn [attr.type]=\"type\" [attr.id]=\"inputId\" [disabled]=\"disabled\" [attr.placeholder]=\"(value&&value.length ? null : placeholder)\" [attr.tabindex]=\"tabindex\" [attr.maxlength]=\"maxlength\" (input)=\"onInput($event)\"  (click)=\"onInputClick($event)\"\n                            (keydown)=\"onKeydown($event)\" [readonly]=\"readonly\" (keyup)=\"onKeyup($event)\" [attr.autofocus]=\"autofocus\" (focus)=\"onInputFocus($event)\" (blur)=\"onInputBlur($event)\" (change)=\"onInputChange($event)\" (paste)=\"onInputPaste($event)\" [autocomplete]=\"autocomplete\"\n                            [ngStyle]=\"inputStyle\" [class]=\"inputStyleClass\" [attr.aria-label]=\"ariaLabel\" [attr.aria-labelledby]=\"ariaLabelledBy\" [attr.aria-required]=\"required\"\n                            aria-autocomplete=\"list\" [attr.aria-controls]=\"listId\" role=\"searchbox\" [attr.aria-expanded]=\"overlayVisible\" aria-haspopup=\"true\" [attr.aria-activedescendant]=\"'p-highlighted-option'\">\n                </li>\n            </ul>\n            <i *ngIf=\"loading\" class=\"p-autocomplete-loader pi pi-spinner pi-spin\"></i><button #ddBtn type=\"button\" pButton [icon]=\"dropdownIcon\" [attr.aria-label]=\"dropdownAriaLabel\" class=\"p-autocomplete-dropdown\" [disabled]=\"disabled\" pRipple\n                (click)=\"handleDropdownClick($event)\" *ngIf=\"dropdown\" [attr.tabindex]=\"tabindex\"></button>\n            <div #panel *ngIf=\"overlayVisible\" (click)=\"onOverlayClick($event)\" [ngClass]=\"['p-autocomplete-panel p-component']\" [style.max-height]=\"virtualScroll ? 'auto' : scrollHeight\" [ngStyle]=\"panelStyle\" [class]=\"panelStyleClass\"\n                [@overlayAnimation]=\"{value: 'visible', params: {showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions}}\" (@overlayAnimation.start)=\"onOverlayAnimationStart($event)\" (@overlayAnimation.done)=\"onOverlayAnimationEnd($event)\">\n                <ng-container *ngTemplateOutlet=\"headerTemplate\"></ng-container>\n                <ul role=\"listbox\" [attr.id]=\"listId\" class=\"p-autocomplete-items\" [ngClass]=\"{'p-autocomplete-virtualscroll': virtualScroll}\">\n                    <ng-container *ngIf=\"group\">\n                        <ng-template ngFor let-optgroup [ngForOf]=\"suggestions\">\n                            <li class=\"p-autocomplete-item-group\">\n                                <span *ngIf=\"!groupTemplate\">{{getOptionGroupLabel(optgroup)||'empty'}}</span>\n                                <ng-container *ngTemplateOutlet=\"groupTemplate; context: {$implicit: optgroup}\"></ng-container>\n                            </li>\n                            <ng-container *ngTemplateOutlet=\"itemslist; context: {$implicit: getOptionGroupChildren(optgroup)}\"></ng-container>\n                        </ng-template>\n                    </ng-container>\n                    <ng-container *ngIf=\"!group\">\n                            <ng-container *ngTemplateOutlet=\"itemslist; context: {$implicit: suggestions}\"></ng-container>\n                    </ng-container>\n                    <ng-template #itemslist let-suggestionsToDisplay>\n                        <ng-container *ngIf=\"!virtualScroll; else virtualScrollList\">\n                            <li role=\"option\" *ngFor=\"let option of suggestionsToDisplay; let idx = index\" class=\"p-autocomplete-item\" pRipple [ngClass]=\"{'p-highlight': (option === highlightOption)}\" [id]=\"highlightOption == option ? 'p-highlighted-option':''\" (click)=\"selectItem(option)\">\n                                <span *ngIf=\"!itemTemplate\">{{resolveFieldData(option)}}</span>\n                                <ng-container *ngTemplateOutlet=\"itemTemplate; context: {$implicit: option, index: idx}\"></ng-container>\n                            </li>\n                        </ng-container>\n                        <ng-template #virtualScrollList>\n                            <cdk-virtual-scroll-viewport [ngStyle]=\"{'height': scrollHeight}\" [itemSize]=\"itemSize\" *ngIf=\"virtualScroll && !noResults\">\n                                <ng-container *cdkVirtualFor=\"let option of suggestionsToDisplay; let i = index; let c = count; let f = first; let l = last; let e = even; let o = odd\">\n                                    <li role=\"option\" class=\"p-autocomplete-item\" pRipple [ngClass]=\"{'p-highlight': (option === highlightOption)}\" [ngStyle]=\"{'height': itemSize + 'px'}\" [id]=\"highlightOption == option ? 'p-highlighted-option':''\" (click)=\"selectItem(option)\">\n                                        <span *ngIf=\"!itemTemplate\">{{resolveFieldData(option)}}</span>\n                                        <ng-container *ngTemplateOutlet=\"itemTemplate; context: {$implicit: option, index: i}\"></ng-container>\n                                    </li>\n                                </ng-container>\n                            </cdk-virtual-scroll-viewport>\n                        </ng-template>\n                        <li *ngIf=\"noResults && showEmptyMessage\" class=\"p-autocomplete-empty-message\">\n                            <ng-container *ngIf=\"!emptyTemplate; else empty\">\n                                {{emptyMessageLabel}}\n                            </ng-container>\n                            <ng-container #empty *ngTemplateOutlet=\"emptyTemplate\"></ng-container>\n                        </li>\n                    </ng-template>\n                </ul>\n                <ng-container *ngTemplateOutlet=\"footerTemplate\"></ng-container>\n            </div>\n        </span>\n    `, isInline: true, styles: [\".p-autocomplete{display:inline-flex;position:relative}.p-autocomplete-loader{position:absolute;top:50%;margin-top:-.5rem}.p-autocomplete-dd .p-autocomplete-input{flex:1 1 auto;width:1%}.p-autocomplete-dd .p-autocomplete-input,.p-autocomplete-dd .p-autocomplete-multiple-container{border-top-right-radius:0;border-bottom-right-radius:0}.p-autocomplete-dd .p-autocomplete-dropdown{border-top-left-radius:0;border-bottom-left-radius:0}.p-autocomplete .p-autocomplete-panel{min-width:100%;top:0;left:0}.p-autocomplete-panel{position:absolute;overflow:auto}.p-autocomplete-items{margin:0;padding:0;list-style-type:none}.p-autocomplete-item{cursor:pointer;white-space:nowrap;position:relative;overflow:hidden}.p-autocomplete-multiple-container{margin:0;padding:0;list-style-type:none;cursor:text;overflow:hidden;display:flex;align-items:center;flex-wrap:wrap}.p-autocomplete-token{cursor:default;display:inline-flex;align-items:center;flex:0 0 auto}.p-autocomplete-token-icon{cursor:pointer}.p-autocomplete-input-token{flex:1 1 auto;display:inline-flex}.p-autocomplete-input-token input{border:0 none;outline:0 none;background-color:transparent;margin:0;padding:0;box-shadow:none;border-radius:0;width:100%}.p-fluid .p-autocomplete{display:flex}.p-fluid .p-autocomplete-dd .p-autocomplete-input{width:1%}.p-autocomplete-clear-icon{position:absolute;top:50%;margin-top:-.5rem;cursor:pointer}.p-autocomplete-clearable{position:relative}\\n\"], components: [{ type: i2.CdkVirtualScrollViewport, selector: \"cdk-virtual-scroll-viewport\", inputs: [\"orientation\", \"appendOnly\"], outputs: [\"scrolledIndexChange\"] }], directives: [{ type: i3.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i3.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i3.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i3.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }, { type: i4.ButtonDirective, selector: \"[pButton]\", inputs: [\"iconPos\", \"loadingIcon\", \"label\", \"icon\", \"loading\"] }, { type: i5.Ripple, selector: \"[pRipple]\" }, { type: i2.CdkFixedSizeVirtualScroll, selector: \"cdk-virtual-scroll-viewport[itemSize]\", inputs: [\"itemSize\", \"minBufferPx\", \"maxBufferPx\"] }, { type: i2.CdkVirtualForOf, selector: \"[cdkVirtualFor][cdkVirtualForOf]\", inputs: [\"cdkVirtualForOf\", \"cdkVirtualForTrackBy\", \"cdkVirtualForTemplate\", \"cdkVirtualForTemplateCacheSize\"] }], animations: [\n        trigger('overlayAnimation', [\n            transition(':enter', [\n                style({ opacity: 0, transform: 'scaleY(0.8)' }),\n                animate('{{showTransitionParams}}')\n            ]),\n            transition(':leave', [\n                animate('{{hideTransitionParams}}', style({ opacity: 0 }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: AutoComplete, decorators: [{\n            type: Component,\n            args: [{ selector: 'p-autoComplete', template: `\n        <span #container [ngClass]=\"{'p-autocomplete p-component':true,'p-autocomplete-dd':dropdown,'p-autocomplete-multiple':multiple}\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <input *ngIf=\"!multiple\" #in [attr.type]=\"type\" [attr.id]=\"inputId\" [ngStyle]=\"inputStyle\" [class]=\"inputStyleClass\" [autocomplete]=\"autocomplete\" [attr.required]=\"required\" [attr.name]=\"name\"\n            class=\"p-autocomplete-input p-inputtext p-component\" [ngClass]=\"{'p-autocomplete-dd-input':dropdown,'p-disabled': disabled}\" [value]=\"inputFieldValue\" aria-autocomplete=\"list\" role=\"searchbox\"\n            (click)=\"onInputClick($event)\" (input)=\"onInput($event)\" (keydown)=\"onKeydown($event)\" (keyup)=\"onKeyup($event)\" [attr.autofocus]=\"autofocus\" (focus)=\"onInputFocus($event)\" (blur)=\"onInputBlur($event)\" (change)=\"onInputChange($event)\" (paste)=\"onInputPaste($event)\"\n            [attr.placeholder]=\"placeholder\" [attr.size]=\"size\" [attr.maxlength]=\"maxlength\" [attr.tabindex]=\"tabindex\" [readonly]=\"readonly\" [disabled]=\"disabled\" [attr.aria-label]=\"ariaLabel\" [attr.aria-labelledby]=\"ariaLabelledBy\" [attr.aria-required]=\"required\">\n            <i *ngIf=\"!multiple && inputValue && filled && !disabled && showClear\" class=\"p-autocomplete-clear-icon pi pi-times\" (click)=\"clear()\"></i>\n            <i *ngIf=\"multiple && value && filled && !disabled && showClear\" class=\"p-autocomplete-clear-icon pi pi-times\" (click)=\"clear()\"></i>\n            <ul *ngIf=\"multiple\" #multiContainer class=\"p-autocomplete-multiple-container p-component p-inputtext\" [ngClass]=\"{'p-disabled':disabled,'p-focus':focus}\" (click)=\"multiIn.focus()\">\n                <li #token *ngFor=\"let val of value\" class=\"p-autocomplete-token\">\n                    <ng-container *ngTemplateOutlet=\"selectedItemTemplate; context: {$implicit: val}\"></ng-container>\n                    <span *ngIf=\"!selectedItemTemplate\" class=\"p-autocomplete-token-label\">{{resolveFieldData(val)}}</span>\n                    <span  class=\"p-autocomplete-token-icon pi pi-times-circle\" (click)=\"removeItem(token)\" *ngIf=\"!disabled && !readonly\"></span>\n                </li>\n                <li class=\"p-autocomplete-input-token\">\n                    <input #multiIn [attr.type]=\"type\" [attr.id]=\"inputId\" [disabled]=\"disabled\" [attr.placeholder]=\"(value&&value.length ? null : placeholder)\" [attr.tabindex]=\"tabindex\" [attr.maxlength]=\"maxlength\" (input)=\"onInput($event)\"  (click)=\"onInputClick($event)\"\n                            (keydown)=\"onKeydown($event)\" [readonly]=\"readonly\" (keyup)=\"onKeyup($event)\" [attr.autofocus]=\"autofocus\" (focus)=\"onInputFocus($event)\" (blur)=\"onInputBlur($event)\" (change)=\"onInputChange($event)\" (paste)=\"onInputPaste($event)\" [autocomplete]=\"autocomplete\"\n                            [ngStyle]=\"inputStyle\" [class]=\"inputStyleClass\" [attr.aria-label]=\"ariaLabel\" [attr.aria-labelledby]=\"ariaLabelledBy\" [attr.aria-required]=\"required\"\n                            aria-autocomplete=\"list\" [attr.aria-controls]=\"listId\" role=\"searchbox\" [attr.aria-expanded]=\"overlayVisible\" aria-haspopup=\"true\" [attr.aria-activedescendant]=\"'p-highlighted-option'\">\n                </li>\n            </ul>\n            <i *ngIf=\"loading\" class=\"p-autocomplete-loader pi pi-spinner pi-spin\"></i><button #ddBtn type=\"button\" pButton [icon]=\"dropdownIcon\" [attr.aria-label]=\"dropdownAriaLabel\" class=\"p-autocomplete-dropdown\" [disabled]=\"disabled\" pRipple\n                (click)=\"handleDropdownClick($event)\" *ngIf=\"dropdown\" [attr.tabindex]=\"tabindex\"></button>\n            <div #panel *ngIf=\"overlayVisible\" (click)=\"onOverlayClick($event)\" [ngClass]=\"['p-autocomplete-panel p-component']\" [style.max-height]=\"virtualScroll ? 'auto' : scrollHeight\" [ngStyle]=\"panelStyle\" [class]=\"panelStyleClass\"\n                [@overlayAnimation]=\"{value: 'visible', params: {showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions}}\" (@overlayAnimation.start)=\"onOverlayAnimationStart($event)\" (@overlayAnimation.done)=\"onOverlayAnimationEnd($event)\">\n                <ng-container *ngTemplateOutlet=\"headerTemplate\"></ng-container>\n                <ul role=\"listbox\" [attr.id]=\"listId\" class=\"p-autocomplete-items\" [ngClass]=\"{'p-autocomplete-virtualscroll': virtualScroll}\">\n                    <ng-container *ngIf=\"group\">\n                        <ng-template ngFor let-optgroup [ngForOf]=\"suggestions\">\n                            <li class=\"p-autocomplete-item-group\">\n                                <span *ngIf=\"!groupTemplate\">{{getOptionGroupLabel(optgroup)||'empty'}}</span>\n                                <ng-container *ngTemplateOutlet=\"groupTemplate; context: {$implicit: optgroup}\"></ng-container>\n                            </li>\n                            <ng-container *ngTemplateOutlet=\"itemslist; context: {$implicit: getOptionGroupChildren(optgroup)}\"></ng-container>\n                        </ng-template>\n                    </ng-container>\n                    <ng-container *ngIf=\"!group\">\n                            <ng-container *ngTemplateOutlet=\"itemslist; context: {$implicit: suggestions}\"></ng-container>\n                    </ng-container>\n                    <ng-template #itemslist let-suggestionsToDisplay>\n                        <ng-container *ngIf=\"!virtualScroll; else virtualScrollList\">\n                            <li role=\"option\" *ngFor=\"let option of suggestionsToDisplay; let idx = index\" class=\"p-autocomplete-item\" pRipple [ngClass]=\"{'p-highlight': (option === highlightOption)}\" [id]=\"highlightOption == option ? 'p-highlighted-option':''\" (click)=\"selectItem(option)\">\n                                <span *ngIf=\"!itemTemplate\">{{resolveFieldData(option)}}</span>\n                                <ng-container *ngTemplateOutlet=\"itemTemplate; context: {$implicit: option, index: idx}\"></ng-container>\n                            </li>\n                        </ng-container>\n                        <ng-template #virtualScrollList>\n                            <cdk-virtual-scroll-viewport [ngStyle]=\"{'height': scrollHeight}\" [itemSize]=\"itemSize\" *ngIf=\"virtualScroll && !noResults\">\n                                <ng-container *cdkVirtualFor=\"let option of suggestionsToDisplay; let i = index; let c = count; let f = first; let l = last; let e = even; let o = odd\">\n                                    <li role=\"option\" class=\"p-autocomplete-item\" pRipple [ngClass]=\"{'p-highlight': (option === highlightOption)}\" [ngStyle]=\"{'height': itemSize + 'px'}\" [id]=\"highlightOption == option ? 'p-highlighted-option':''\" (click)=\"selectItem(option)\">\n                                        <span *ngIf=\"!itemTemplate\">{{resolveFieldData(option)}}</span>\n                                        <ng-container *ngTemplateOutlet=\"itemTemplate; context: {$implicit: option, index: i}\"></ng-container>\n                                    </li>\n                                </ng-container>\n                            </cdk-virtual-scroll-viewport>\n                        </ng-template>\n                        <li *ngIf=\"noResults && showEmptyMessage\" class=\"p-autocomplete-empty-message\">\n                            <ng-container *ngIf=\"!emptyTemplate; else empty\">\n                                {{emptyMessageLabel}}\n                            </ng-container>\n                            <ng-container #empty *ngTemplateOutlet=\"emptyTemplate\"></ng-container>\n                        </li>\n                    </ng-template>\n                </ul>\n                <ng-container *ngTemplateOutlet=\"footerTemplate\"></ng-container>\n            </div>\n        </span>\n    `, animations: [\n                        trigger('overlayAnimation', [\n                            transition(':enter', [\n                                style({ opacity: 0, transform: 'scaleY(0.8)' }),\n                                animate('{{showTransitionParams}}')\n                            ]),\n                            transition(':leave', [\n                                animate('{{hideTransitionParams}}', style({ opacity: 0 }))\n                            ])\n                        ])\n                    ], host: {\n                        'class': 'p-element p-inputwrapper',\n                        '[class.p-inputwrapper-filled]': 'filled',\n                        '[class.p-inputwrapper-focus]': '(focus && !disabled) || overlayVisible',\n                        '[class.p-autocomplete-clearable]': 'showClear && !disabled'\n                    }, providers: [AUTOCOMPLETE_VALUE_ACCESSOR], changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, styles: [\".p-autocomplete{display:inline-flex;position:relative}.p-autocomplete-loader{position:absolute;top:50%;margin-top:-.5rem}.p-autocomplete-dd .p-autocomplete-input{flex:1 1 auto;width:1%}.p-autocomplete-dd .p-autocomplete-input,.p-autocomplete-dd .p-autocomplete-multiple-container{border-top-right-radius:0;border-bottom-right-radius:0}.p-autocomplete-dd .p-autocomplete-dropdown{border-top-left-radius:0;border-bottom-left-radius:0}.p-autocomplete .p-autocomplete-panel{min-width:100%;top:0;left:0}.p-autocomplete-panel{position:absolute;overflow:auto}.p-autocomplete-items{margin:0;padding:0;list-style-type:none}.p-autocomplete-item{cursor:pointer;white-space:nowrap;position:relative;overflow:hidden}.p-autocomplete-multiple-container{margin:0;padding:0;list-style-type:none;cursor:text;overflow:hidden;display:flex;align-items:center;flex-wrap:wrap}.p-autocomplete-token{cursor:default;display:inline-flex;align-items:center;flex:0 0 auto}.p-autocomplete-token-icon{cursor:pointer}.p-autocomplete-input-token{flex:1 1 auto;display:inline-flex}.p-autocomplete-input-token input{border:0 none;outline:0 none;background-color:transparent;margin:0;padding:0;box-shadow:none;border-radius:0;width:100%}.p-fluid .p-autocomplete{display:flex}.p-fluid .p-autocomplete-dd .p-autocomplete-input{width:1%}.p-autocomplete-clear-icon{position:absolute;top:50%;margin-top:-.5rem;cursor:pointer}.p-autocomplete-clearable{position:relative}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.Renderer2 }, { type: i0.ChangeDetectorRef }, { type: i0.IterableDiffers }, { type: i1.PrimeNGConfig }, { type: i1.OverlayService }]; }, propDecorators: { minLength: [{\n                type: Input\n            }], delay: [{\n                type: Input\n            }], style: [{\n                type: Input\n            }], panelStyle: [{\n                type: Input\n            }], styleClass: [{\n                type: Input\n            }], panelStyleClass: [{\n                type: Input\n            }], inputStyle: [{\n                type: Input\n            }], inputId: [{\n                type: Input\n            }], inputStyleClass: [{\n                type: Input\n            }], placeholder: [{\n                type: Input\n            }], readonly: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], virtualScroll: [{\n                type: Input\n            }], itemSize: [{\n                type: Input\n            }], maxlength: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], required: [{\n                type: Input\n            }], size: [{\n                type: Input\n            }], appendTo: [{\n                type: Input\n            }], autoHighlight: [{\n                type: Input\n            }], forceSelection: [{\n                type: Input\n            }], type: [{\n                type: Input\n            }], autoZIndex: [{\n                type: Input\n            }], baseZIndex: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input\n            }], dropdownAriaLabel: [{\n                type: Input\n            }], ariaLabelledBy: [{\n                type: Input\n            }], dropdownIcon: [{\n                type: Input\n            }], unique: [{\n                type: Input\n            }], group: [{\n                type: Input\n            }], completeOnFocus: [{\n                type: Input\n            }], showClear: [{\n                type: Input\n            }], completeMethod: [{\n                type: Output\n            }], onSelect: [{\n                type: Output\n            }], onUnselect: [{\n                type: Output\n            }], onFocus: [{\n                type: Output\n            }], onBlur: [{\n                type: Output\n            }], onDropdownClick: [{\n                type: Output\n            }], onClear: [{\n                type: Output\n            }], onKeyUp: [{\n                type: Output\n            }], onShow: [{\n                type: Output\n            }], onHide: [{\n                type: Output\n            }], field: [{\n                type: Input\n            }], scrollHeight: [{\n                type: Input\n            }], dropdown: [{\n                type: Input\n            }], showEmptyMessage: [{\n                type: Input\n            }], dropdownMode: [{\n                type: Input\n            }], multiple: [{\n                type: Input\n            }], tabindex: [{\n                type: Input\n            }], dataKey: [{\n                type: Input\n            }], emptyMessage: [{\n                type: Input\n            }], showTransitionOptions: [{\n                type: Input\n            }], hideTransitionOptions: [{\n                type: Input\n            }], autofocus: [{\n                type: Input\n            }], autocomplete: [{\n                type: Input\n            }], optionGroupChildren: [{\n                type: Input\n            }], optionGroupLabel: [{\n                type: Input\n            }], containerEL: [{\n                type: ViewChild,\n                args: ['container']\n            }], inputEL: [{\n                type: ViewChild,\n                args: ['in']\n            }], multiInputEL: [{\n                type: ViewChild,\n                args: ['multiIn']\n            }], multiContainerEL: [{\n                type: ViewChild,\n                args: ['multiContainer']\n            }], dropdownButton: [{\n                type: ViewChild,\n                args: ['ddBtn']\n            }], viewPort: [{\n                type: ViewChild,\n                args: [CdkVirtualScrollViewport]\n            }], templates: [{\n                type: ContentChildren,\n                args: [PrimeTemplate]\n            }], suggestions: [{\n                type: Input\n            }] } });\nclass AutoCompleteModule {\n}\nAutoCompleteModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: AutoCompleteModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nAutoCompleteModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: AutoCompleteModule, declarations: [AutoComplete], imports: [CommonModule, InputTextModule, ButtonModule, SharedModule, RippleModule, ScrollingModule], exports: [AutoComplete, SharedModule, ScrollingModule] });\nAutoCompleteModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: AutoCompleteModule, imports: [[CommonModule, InputTextModule, ButtonModule, SharedModule, RippleModule, ScrollingModule], SharedModule, ScrollingModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: AutoCompleteModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, InputTextModule, ButtonModule, SharedModule, RippleModule, ScrollingModule],\n                    exports: [AutoComplete, SharedModule, ScrollingModule],\n                    declarations: [AutoComplete]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AUTOCOMPLETE_VALUE_ACCESSOR, AutoComplete, AutoCompleteModule };\n"]},"metadata":{},"sourceType":"module"}